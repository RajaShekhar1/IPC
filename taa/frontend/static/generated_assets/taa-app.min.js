var case_management=(function(){var loading_html="<span class='icon-spinner icon-spin grey bigger-200'></span> <span class='bigger-175'> Loading data...</span>";function refresh_census_table(case_id,url,table_selector,loading_selector,init_callback,no_data_cb,success_callback){var loading=$(loading_selector);var table=$(table_selector);var table_settings={"responsive":{breakpoints:get_responsive_datatables_breakpoints()},"autoWidth":false,"aoColumnDefs":[{"aTargets":[0],"bSortable":false,"mData":function(source){if(source.enrollment_status!==null){return'<button class="btn btn-primary btn-xs enroll-employee" data-id="'+source.id+'"><span class="ace-icon glyphicon glyphicon-plus"></span> Add Coverage</button>';}
return'<button class="btn btn-primary btn-sm enroll-employee" data-id="'+source.id+'">Enroll</button>';}},{"aTargets":[1],"mData":function(source){return format_enrollment_status_html(source.enrollment_status);}},{"aTargets":[2],"mData":function(source){return"<a href='/enrollment-case/"+source.case_id+"/census/"+source.id+"'>"+source.employee_first+"</a>";}},{"aTargets":[3],"mData":function(source){return"<a href='/enrollment-case/"+source.case_id+"/census/"+source.id+"'>"+source.employee_last+"</a>";}},{"aTargets":[4],"mData":function(source){return normalize_date(source.employee_birthdate);}},{"aTargets":[5],"mData":"employee_email",className:"min-breakIII"}],"aaSorting":[[3,"asc"]]};loading.html(loading_html);clear_table(table);$.get(url,{},function(resp){loading.html("");if($.fn.DataTable.fnIsDataTable(table.get(0))){table.dataTable().fnAddData(resp.data);if(success_callback!==undefined){success_callback(table,resp.data);}}else if(resp.data.length>0){table.show();$(".no-census-header").hide();table_settings.aaData=resp.data;table.wrap("<div class='dataTables_borderWrap' />").dataTable(table_settings);if(init_callback!==undefined){init_callback(table,resp.data);}
if(success_callback!==undefined){success_callback(table,resp.data);}}else if(no_data_cb!==undefined){no_data_cb();}});}
function refresh_enrollments_table(case_id,url,table_selector,loading_selector,table_options,init_callback){var loading=$(loading_selector);var table=$(table_selector);var table_defaults={"responsive":{breakpoints:get_responsive_datatables_breakpoints()},"autoWidth":false,"aoColumnDefs":[{"aTargets":[0],"mData":function(source){return format_date(parse_date(source.signature_time));},"className":"min-breakII"},{"aTargets":[1],"mData":"employee_first"},{"aTargets":[2],"mData":"employee_last"},{"aTargets":[3],"mData":function(source){return format_date(parse_date(source.employee_birthdate,"YYYY-MM-DD"));},"className":"min-breakII"},{"aTargets":[4],"mData":"employee_email","className":"min-breakI"},{"aTargets":[5],"mData":function(source){return format_enrollment_status_html(source.enrollment_status)},className:"min-breakV"},{"aTargets":[6],"mData":function(source){return'$'+source.total_annual_premium;},"sClass":"text-right"}],"aaSorting":[[2,"asc"]],"iDisplayLength":25};var table_settings=$.extend({},table_defaults,table_options||{});loading.html(loading_html);clear_table(table);$.get(url,{},function(resp){loading.html("");if(table_exists(table)){update_table_data(table,resp.data);}else if(resp.data.length>0){init_data_table(table,table_settings,resp.data,init_callback);}});}
function table_exists(table){return $.fn.DataTable.fnIsDataTable(table.get(0));}
function clear_table(table){if($.fn.DataTable.fnIsDataTable(table.get(0))){table.dataTable().fnClearTable();}}
function update_table_data(table,data){table.dataTable().fnAddData(data);table.DataTable().columns.adjust().draw();}
function init_data_table(table,table_settings,data,init_callback){table.show();table_settings.aaData=data;table.wrap("<div class='dataTables_borderWrap' />").dataTable(table_settings);if(init_callback!==undefined){init_callback(table);}
table.DataTable().columns.adjust().draw();}
var _alphabet_search_letter;$.fn.dataTableExt.afnFiltering.push(function(oSettings,aData,iDataIndex){if(!_alphabet_search_letter){return true;}
var last_name_col=3;return(aData[last_name_col]&&aData[last_name_col].charAt(0)===_alphabet_search_letter);});function init_alphabet_search(table){var alphabet=$('<div class="alphabet hidden-sm hidden-xs"/>').append('Last Name: ');$('<span class="clear active"/>').data('letter','').html('Reset').appendTo(alphabet);for(var i=0;i<26;i++){var letter=String.fromCharCode(65+i);$('<span class="letter"/>').data('letter',letter).html(letter).appendTo(alphabet);}
alphabet.insertBefore(table);alphabet.on('click','span',function(){alphabet.find('.active').removeClass('active');$(this).addClass('active');_alphabet_search_letter=$(this).data('letter');table.fnDraw();});}
var _should_show_enrolled=true;$.fn.dataTableExt.afnFiltering.push(function(oSettings,aData,iDataIndex){if(_should_show_enrolled){return true;}
return(aData[1]==="Not Enrolled");});function init_status_filter(table){var ctn=$('<div class="status-filter">');ctn.html("<label><input type='checkbox' class='ace' checked='checked'> <span class='lbl'> Show Enrolled</span></label>");ctn.on('change','input',function(){_should_show_enrolled=$(this).prop("checked");table.fnDraw();});ctn.insertBefore(table);}
return{refresh_census_table:refresh_census_table,refresh_enrollments_table:refresh_enrollments_table,init_alphabet_search:init_alphabet_search,init_status_filter:init_status_filter};})();if(typeof Object.create!='function'){(function(){var F=function(){};Object.create=function(o){if(arguments.length>1){throw Error('Second argument not supported');}
if(o===null){throw Error('Cannot set a null [[Prototype]]');}
if(typeof o!='object'){throw new TypeError('Argument must be an object');}
F.prototype=o;return new F();};})();}
function init_rate_form(data){var ui=new WizardUI(data);window.ui=ui;ko.applyBindings(ui);}
function build_product(root,products){if(products.length==0){alert("Error: No products to enroll.");return null;}
var product_data=products[0];var base_type=product_data.base_product_type;var base_product;if(base_type=="FPPTI"){base_product=new FPPTIProduct(product_data);}else if(base_type=="FPPCI"){base_product=new FPPCIProduct(product_data);}else if(base_type=="Group CI"){base_product=new GroupCIProduct(root,product_data);}else if(base_type=="FPP-Gov"){base_product=new FPPGovProduct(product_data);}else{alert("Invalid product type '"+base_type+"'");base_product=new FPPTIProduct(product_data);}
if(product_data.is_guaranteed_issue){return new GIProductDecorator(base_product,product_data);}else{return base_product;}}
function WizardUI(defaults){var self=this;self.defaults=defaults;self.case_id=defaults.case_id;self.insurance_product=build_product(self,defaults.products);self.disclaimer_notice_confirmed=ko.observable(false);self.payroll_deductions_confirmed=ko.observable(false);self.did_decline=ko.observable(false);self.is_in_person_application=ko.observable('is_in_person'in defaults&&defaults.is_in_person);self.is_self_enroll=ko.pureComputed(function(){return!self.is_in_person_application()});self.identityToken=ko.observable("");self.identityType=ko.observable("");self.enrollCity=ko.observable(defaults.enroll_city||"");self.enrollState=defaults.state;self.was_state_provided=("state"in defaults&&defaults.state!==null&&defaults.state!="XX");self.company_name=ko.observable(defaults.company_name||"(Unknown Company)");self.existing_insurance=ko.observable(null);self.replacing_insurance=ko.observable(null);self.NAIC_AND_MI=['AK','AL','AR','AZ','CO','IA','LA','MD','ME','MS','MT','NC','NE','NH','NJ','NM','OH','OR','RI','SC','TX','UT','VA','VT','WI','WV','MI'];self.is_NAIC_OR_MI=function(){return self.insurance_product.is_fpp_product()&&_.contains(self.NAIC_AND_MI,self.enrollState);};self.is_KY_OR_KS=function(){return self.enrollState=="KY"||self.enrollState=="KS";};self.is_CT_DC_ND_VI=function(){return _.contains(['CT','DC','ND','VI'],self.enrollState);};self.is_non_NAIC_other=function(){return!(self.is_NAIC_OR_MI()||self.is_KY_OR_KS()||self.is_CT_DC_ND_VI());};self.get_has_existing_question_highlight=function(){if(self.is_self_enroll()){return'flag';}
return"checkmark";};self.get_replacing_question_highlight=function(){if(self.is_KY_OR_KS()){return"stop";}
if(self.is_CT_DC_ND_VI()){return"checkmark";}
return'flag';};self.warning_modal_title=ko.observable("");self.warning_modal_body=ko.observable("");self.show_warning_modal=function(title,body){self.warning_modal_title(title);self.warning_modal_body(body);$("#warning_modal").modal('show');};var default_warning_body='STOP: A "yes" response to this question disqualifies you from completing this application in your state.';self.select_has_existing_insurance=function(){self.existing_insurance(true);};self.select_replacing_insurance=function(){self.replacing_insurance(true);if(!self.insurance_product.is_fpp_product()||self.is_KY_OR_KS()){self.show_warning_modal("Replacement Notice",default_warning_body);}};self.should_show_NAIC_replacement_notice=ko.computed(function(){return(self.is_NAIC_OR_MI()&&self.replacing_insurance()===false);});self.should_show_replacement_form=ko.computed(function(){if(!self.insurance_product.is_fpp_product()){return false;}
if(self.is_KY_OR_KS()||self.is_CT_DC_ND_VI())
return false;if(self.is_self_enroll()&&self.existing_insurance())
return true;if(self.should_show_NAIC_replacement_notice())
return false;return self.replacing_insurance();});self.replacement_read_aloud=ko.observable(false);self.replacement_is_terminating=ko.observable(null);self.replacement_using_funds=ko.observable(null);var self_enroll_stop_message="This response requires you to speak with your insurance representative directly, and prevents you from continuing enrollment at this time. You may cancel this enrollment session and contact your representative.";self.replacement_is_terminating.subscribe(function(){if(self.is_self_enroll()&&self.replacement_is_terminating()){self.show_warning_modal("Replacement Notice",self_enroll_stop_message);}});self.replacement_using_funds.subscribe(function(){if(self.is_self_enroll()&&self.replacement_using_funds()){self.show_warning_modal("Replacement Notice",self_enroll_stop_message);}});self.should_show_replacement_details_form=ko.pureComputed(function(){if(self.is_self_enroll()){return false;}
return self.replacement_using_funds()||self.replacement_is_terminating();});self.get_replacement_paragraphs=ko.computed(function(){var paragraph_map=self.insurance_product.get_replacement_paragraphs();var paragraphs=paragraph_map[self.enrollState];if(!paragraphs){return[];}
return paragraphs;});self.replacement_policies=ko.observableArray([new ReplacementPolicy()]);self.add_replacement_policy=function(){self.replacement_policies.push(new ReplacementPolicy());};self.remove_replacement_policy=function(policy){self.replacement_policies.remove(policy);};self.is_replacement_form_required=ko.computed(function(){return(self.insurance_product.is_fpp_product()&&(self.existing_insurance()||self.replacing_insurance()));});self.policy_owner=ko.observable("self");self.other_owner_name=ko.observable("");self.other_owner_ssn=ko.observable("");self.spouse_policy_owner=ko.observable("employee");self.spouse_other_owner_name=ko.observable("");self.spouse_other_owner_ssn=ko.observable("");self.selected_plan=ko.observable(new NullBenefitsPackage(self));var question_data=process_health_question_data(self,defaults.health_questions,self.insurance_product.product_data);self.health_questions=ko.observableArray(question_data);self.selected_recommendation=ko.observable(null);self.employee=ko.observable(new InsuredApplicant(InsuredApplicant.EmployeeType,self.defaults.employee_data||{},self.selected_plan,self.health_questions));self.should_show_gender=function(){return self.insurance_product.requires_gender();};self.should_show_height=function(){return self.insurance_product.requires_height();};self.should_show_weight=function(){return self.insurance_product.requires_weight();};self.should_show_smoker=function(){return self.insurance_product.requires_is_smoker();};self.should_show_extended_questions=function(){return(self.should_show_gender()||self.should_show_height()||self.should_show_weight()||self.should_show_smoker());};var spouse_data=self.defaults.spouse_data||{};if(!spouse_data.last){spouse_data.last=self.employee().last();}
self.spouse=ko.observable(new InsuredApplicant(InsuredApplicant.SpouseType,spouse_data,self.selected_plan,self.health_questions));var is_initially_showing_spouse=(self.spouse().first()&&self.spouse().first()!==""&&self.spouse().last()&&self.spouse().last()!==""&&self.spouse().birthdate()&&self.spouse().birthdate()!==undefined);self.should_show_spouse=ko.observable(is_initially_showing_spouse);self.is_spouse_valid=ko.computed(function(){return self.insurance_product.is_valid_spouse(self.spouse());});self.should_include_spouse_in_table=ko.computed(function(){return self.should_show_spouse()&&self.spouse().is_valid()&&self.is_spouse_valid();});self.show_spouse_name=ko.computed(function(){return(self.should_include_spouse_in_table())?self.spouse().name():"";});self.is_spouse_address_same_as_employee=ko.observable(!self.spouse().address1()||(self.employee().address1()===self.spouse().address1()&&self.employee().address2()===self.spouse().address2()&&self.employee().city()===self.spouse().city()&&self.employee().state()===self.spouse().state()&&self.employee().zip()===self.spouse().zip()));self.is_spouse_email_same_as_employee=ko.observable((!self.spouse().email()||self.employee().email()===self.spouse().email()));self.employee_beneficiary_type=ko.observable("spouse");self.employee_other_beneficiary=ko.observable(new Beneficiary());self.employee_contingent_beneficiary_type=ko.observable("none");self.employee_contingent_beneficiary=ko.observable(new Beneficiary());self.spouse_beneficiary_type=ko.observable("spouse");self.spouse_other_beneficiary=ko.observable(new Beneficiary());self.spouse_contingent_beneficiary_type=ko.observable("none");self.spouse_contingent_beneficiary=ko.observable(new Beneficiary());self.is_employee_beneficiary_info_required=function(){return!self.did_select_spouse_coverage()||$("#eeBeneOther").is(':checked')};self.should_include_children=ko.observable(self.defaults.children_data.length>0);if(self.defaults.children_data.length==0){self.children=ko.observableArray([new InsuredApplicant(InsuredApplicant.ChildType,{last:self.employee().last()||""},self.selected_plan,self.health_questions),new InsuredApplicant(InsuredApplicant.ChildType,{last:self.employee().last()||""},self.selected_plan,self.health_questions)]);}else{self.children=ko.observableArray($.map(self.defaults.children_data,function(child_data){if(!child_data.last){child_data.last=self.employee().last();}
return new InsuredApplicant(InsuredApplicant.ChildType,child_data,self.selected_plan,self.health_questions);}));}
self.get_valid_children=ko.computed(function(){var children=[];$.each(self.children(),function(){if(this.is_valid()&&self.insurance_product.is_valid_child(this)){children.push(this);}});return children;});self.show_children_names=ko.computed(function(){if(self.should_include_children()){$('.input-mask-ssn').mask('999-99-9999');var valid_children=self.get_valid_children();var firstnames=$.map(valid_children,function(child){return child.first();});var names=firstnames.join(", ");if(valid_children.length>1){names+=" (Each)";}
return names;}else{return"";}});self.add_child=function(){var child_insured_applicant=new InsuredApplicant(InsuredApplicant.ChildType,{last:self.employee().last()||""},self.selected_plan,self.health_questions);self.children.push(child_insured_applicant);$('.input-mask-date').mask('99/99/9999');$('.input-mask-ssn').mask('999-99-9999');};self.remove_child=function(child){self.children.remove(child);if(self.children().length==0){self.should_include_children(false);}};self.rendered_child=function(element){$(element).hide().slideDown(400);};self.removing_child=function(element){$(element).slideUp(function(){$(element).remove();});};self.has_valid_children=ko.computed(function(){return self.get_valid_children().length>0;});self.are_children_ages_valid=ko.computed(function(){var all_valid=true;$.each(self.children(),function(){if(!self.insurance_product.is_valid_child(this)){all_valid=false;return false;}});return all_valid;});self.should_include_children_in_table=ko.computed(function(){return self.should_include_children()&&self.has_valid_children()&&self.are_children_ages_valid();});self.child_benefits=ko.observable(new InsuredApplicant(InsuredApplicant.ChildType,{},self.selected_plan,self.health_questions));self.get_children_options=ko.computed(function(){if(!self.should_include_children_in_table()){return[];}
return self.insurance_product.get_coverage_options_for_applicant('children')();});self.payment_mode=ko.observable(defaults.payment_mode);if(defaults.payment_mode_choices==null){self.payment_mode_choices=ko.observable(null);}else{self.payment_mode_choices=ko.observable(defaults.payment_mode_choices);}
self.payment_mode_text=ko.pureComputed(function(){try{return _.find(self.payment_mode_choices(),function(x){return x.mode==self.payment_mode()}).name;}catch(e){return'(NA)'}});self.payment_mode_text_lower=ko.pureComputed(function(){try{return _.find(self.payment_mode_choices(),function(x){return x.mode==self.payment_mode()}).name.toLowerCase();}catch(e){return'(NA)'}});self.is_show_rates_clicked=ko.observable(false);self.is_rate_table_loading=ko.observable(false);self.is_employee_info_valid=ko.computed(function(){return self.insurance_product.is_valid_employee(self.employee());});self.is_payment_mode_valid=ko.computed(function(){return self.payment_mode()!=undefined;});self.can_display_rates_table=ko.computed(function(){var valid=self.employee().is_valid();valid&=self.is_employee_info_valid();valid&=self.is_payment_mode_valid();if(self.is_show_rates_clicked()){self.validator.form();}
return valid;});self.is_recommended_table_visible=ko.computed(function(){return(self.is_show_rates_clicked()&&self.can_display_rates_table());});self.show_recommendations_table=function(){if(!self.validator.form()){return;}
if(!self.can_display_rates_table()){return;}
self.refresh_rate_table();self.is_show_rates_clicked(true);};self.update_rate_table=function(){$.each(limit_error_lookup,function(k,v){limit_error_lookup[k](null);});if(!self.is_recommended_table_visible()){self.is_rate_table_loading(false);return;}
self.refresh_rate_table();};self.refresh_rate_table=function(){self.is_rate_table_loading(true);var product_id=self.insurance_product.product_data.id;ajax_post("/products/"+product_id+"/rates",self.build_rate_parameters(),self.show_updated_rates,self.handle_update_rates_error,true);};self.select_recommended_benefit=function(recommendations){self.selected_recommendation(recommendations);self.employee().selected_custom_option(null);self.spouse().selected_custom_option(null);self.child_benefits().selected_custom_option(null);var new_plan=self.get_new_plan_from_recommendations(recommendations);self.selected_plan(new_plan);};self.get_new_plan_from_recommendations=function(recommendations){var benefits_package=new BenefitsPackage(self,recommendations.name());benefits_package.employee_recommendation(recommendations.employee_recommendation());benefits_package.spouse_recommendation(recommendations.spouse_recommendation());benefits_package.children_recommendation(recommendations.children_recommendation());return benefits_package;};self.build_rate_parameters=function(){return{employee:self.employee().serialize_data(),spouse:self.should_include_spouse_in_table()?self.spouse().serialize_data():null,num_children:self.children().length,payment_mode:self.payment_mode()};};self.apply_selected_customization=function(){var new_plan;if(self.selected_recommendation()){new_plan=self.get_new_plan_from_recommendations(self.selected_recommendation());}else{new_plan=new BenefitsPackage(self,"Custom");}
var benefit;if(self.employee().is_valid()){benefit=self.employee().selected_custom_option();if(benefit){new_plan.name("Custom");new_plan.employee_recommendation(new Recommendation(benefit));}}
if(self.should_include_spouse_in_table()){benefit=self.spouse().selected_custom_option();if(benefit){new_plan.name("Custom");new_plan.spouse_recommendation(new Recommendation(benefit));}}
if(self.should_include_children_in_table()){benefit=self.child_benefits().selected_custom_option();if(benefit){new_plan.name("Custom");new_plan.children_recommendation(new Recommendation(benefit));}}
self.selected_plan(new_plan);};self.should_rates_update=ko.computed(function(){var watch_data_values=[self.employee().birthdate,self.employee().is_smoker,self.employee().height,self.employee().weight,self.spouse().birthdate,self.spouse().is_smoker,self.spouse().weight,self.spouse().height,self.children,self.payment_mode,self.should_show_spouse,self.should_include_children_in_table];_.each(watch_data_values,function(observable){observable()});}).extend({rateLimit:{timeout:500,method:"notifyWhenChangesStop"},notify:'always'});self.should_rates_update.subscribe(self.update_rate_table);self.should_show_spouse.subscribe(function(val){if(self.should_show_spouse()){setTimeout(function(){self.validator.form();},0);}});self.show_updated_rates=function(resp){var data=resp.data;self.insurance_product.parse_benefit_options('employee',self.employee(),data.employee_rates);self.insurance_product.parse_benefit_options('spouse',self.spouse(),data.spouse_rates);self.insurance_product.parse_benefit_options('children',self.child_benefits(),data.children_rates);if(data.recommendations){self.recommendations.good.set_recommendations(data.recommendations['good']);self.recommendations.better.set_recommendations(data.recommendations['better']);self.recommendations.best.set_recommendations(data.recommendations['best']);}
if(self.selected_plan().is_valid()){self.apply_selected_customization();}
self.is_rate_table_loading(false);};self.handle_update_rates_error=function(resp){if(resp.status===400&&resp.responseJSON&&resp.responseJSON.errors){$.each(resp.responseJSON.errors,function(){var field_name=this.field;var message=this.error;limit_error_lookup[field_name](true);self.validator.form();});}else{handle_remote_error();}};self.lose_input_focus=function(data,event){var element=$(event.target);element.blur();};self.did_select_employee_coverage=ko.computed(function(){var rec=self.selected_plan().employee_recommendation();return(rec.is_valid()&&rec.recommended_benefit.is_valid());});self.did_select_spouse_coverage=ko.computed(function(){var rec=self.selected_plan().spouse_recommendation();return(rec.is_valid()&&rec.recommended_benefit.is_valid());});self.did_select_children_coverage=ko.computed(function(){var rec=self.selected_plan().children_recommendation();return(rec.is_valid()&&rec.recommended_benefit.is_valid());});self.has_contingent_beneficiary_error=ko.computed(function(){var employee_beneficiary_error=(self.employee_contingent_beneficiary_type()==='spouse'&&self.employee_beneficiary_type()==='spouse');var spouse_beneficiary_error=(self.did_select_spouse_coverage()&&self.insurance_product.should_show_contingent_beneficiary()&&self.spouse_contingent_beneficiary_type()==='spouse'&&self.spouse_beneficiary_type()==='spouse');return(self.insurance_product.should_show_contingent_beneficiary()&&(employee_beneficiary_error||spouse_beneficiary_error));});self.show_health_modal=function(){$("#health_modal").modal('show');};self.recommendations={good:new BenefitsPackage(self,'Good'),better:new BenefitsPackage(self,'Better'),best:new BenefitsPackage(self,'Best')};$.validator.addMethod("minAge",function(val,element,params){var age=age_for_date(val);return(age!==""&&age>=params);},"Must be at least {0} years old for this product");$.validator.addMethod("maxAge",function(val,element,params){var age=age_for_date(val);return(age!==""&&age<=params);},"Must be no more than {0} years old for this product");var limit_error_lookup={employee_height:self.employee().height_error,employee_weight:self.employee().weight_error,spouse_height:self.spouse().height_error,spouse_weight:self.spouse().weight_error};$.validator.addMethod("empHeightLimit",function(val,el,params){return self.employee().height_error()==null;},"The height or weight entered is outside the limits for this product.");$.validator.addMethod("empWeightLimit",function(val,el,params){return self.employee().weight_error()==null;},"The height or weight entered is outside the limits for this product.");$.validator.addMethod("spHeightLimit",function(val,el,params){return self.spouse().height_error()==null;},"The height or weight entered is outside the limits for this product.");$.validator.addMethod("spWeightLimit",function(val,el,params){return self.spouse().weight_error()==null;},"The height or weight entered is outside the limits for this product.");function any_valid_spouse_field(){return self.spouse().any_valid_field();}
self.validator=$("#step1-form").validate({highlight:wizard_validate_highlight,success:wizard_validate_success,errorPlacement:wizard_error_placement,errorElement:'div',errorClass:'help-block',rules:{eeBenefitFName:"required",eeBenefitLName:"required",eeBenefitDOB:{required:true,date:true,minAge:self.insurance_product.min_emp_age(),maxAge:self.insurance_product.max_emp_age()},'tobacco-0':{required:true},'gender-0':"required",spFName:{required:{depends:any_valid_spouse_field}},spLName:{required:{depends:any_valid_spouse_field}},spDOB:{required:{depends:any_valid_spouse_field},date:{depends:any_valid_spouse_field},minAge:{param:self.insurance_product.min_sp_age(),depends:any_valid_spouse_field},maxAge:{param:self.insurance_product.max_sp_age(),depends:any_valid_spouse_field}},'tobacco-1':{required:{depends:any_valid_spouse_field}},'gender-1':{required:{depends:any_valid_spouse_field}},'weight_0':{required:true,empWeightLimit:true},'weight_1':{required:{depends:any_valid_spouse_field},spWeightLimit:true},'height_feet_0':{required:true,empHeightLimit:true},'height_inches_0':{required:true,empHeightLimit:true},'height_feet_1':{required:{depends:any_valid_spouse_field},spHeightLimit:true},'height_inches_1':{required:{depends:any_valid_spouse_field},spHeightLimit:true},paymentMode:{required:true},debug:true},groups:{emp_height:"height_feet_0 height_inches_0",sp_height:"height_feet_1 height_inches_1"}});function is_child_name_required(element){return true;}
function is_child_field_required(element){if($(element).attr("id")==="child-first-0"||$(element).attr("id")==="child-last-0"||$(element).attr("id")==="child-dob-0"){return self.should_include_children();}
var child=ko.dataFor(element);if(!child){return false;}
return child.any_valid_field();}
$.validator.addClassRules("child_birthdate",{required:{depends:is_child_field_required},date:{depends:is_child_field_required},minAge:{param:self.insurance_product.min_child_age(),depends:is_child_field_required},maxAge:{param:self.insurance_product.max_child_age(),depends:is_child_field_required}});$.validator.addClassRules("child_first",{required:{depends:is_child_name_required}});$.validator.addClassRules("child_last",{required:{depends:is_child_name_required}});self.is_form_valid=ko.computed(function(){return(self.selected_plan().is_valid()&&self.selected_plan().has_at_least_one_benefit_selected());});self.attempted_advance_step=ko.observable(false);self.is_selection_error_visible=ko.computed(function(){return self.attempted_advance_step()&&!self.is_form_valid();});self.show_no_selection_error=function(){self.attempted_advance_step(true);};self.get_covered_applicants=ko.computed(function(){if(!self.selected_plan()){return[];}else{return self.selected_plan().get_all_covered_people();}});self.get_all_applicants=ko.computed(function(){var people=[self.employee()];if(self.should_include_spouse_in_table()){people.push(self.spouse());}
_.each(self.get_valid_children(),function(child){people.push(child);});return people;});self.do_any_health_questions_need_answering=ko.computed(function(){if(self.health_questions().length==0){return false;}
return _.any(self.health_questions(),function(question){return question.does_any_applicant_need_to_answer();})},null,{deferEvaluation:true});self.should_show_other_insurance_questions=ko.computed(function(){return(self.insurance_product.product_type!="Group CI");});self.did_decline.subscribe(function(val){if(val){bootbox.dialog({message:"Please note that even after declining enrollment, you may still change your decision and elect to enroll at a later time, provided that your employer's enrollment period is still active.",buttons:{"success":{"label":"Close","className":"btn-sm btn-primary"}}});}});self.can_decline=ko.computed(function(){return(!_.any(self.get_all_applicants(),function(applicant){return applicant.get_existing_coverage_amount_for_product(self.insurance_product.product_data.id);}));});self.is_employee_actively_at_work=ko.observable(null);self.has_spouse_been_treated_6_months=ko.observable(null);self.has_spouse_been_disabled_6_months=ko.observable(null);self.exit_application=function(){bootbox.dialog({message:"Are you sure you want to exit? All data on this application will be discarded.",buttons:{default:{label:"Cancel",className:"btn-default",callback:function(){}},danger:{label:"Exit application and discard data",className:"btn-danger",callback:function(){window.location.href="/enrollment-case/"+self.case_id+"#enrollment";}}}});};}
function process_health_question_data(root,health_question_data_by_product,product_data){var questions=[];_.each(health_question_data_by_product,function(product_health_questions,product_id){if(product_id==product_data.id){var question_factory;if(product_data.is_guaranteed_issue){question_factory=function(question_data){return new GIHealthQuestion(root.insurance_product,question_data,root.selected_plan,product_data.gi_criteria,product_data.statement_of_health_bypass_type,product_data.bypassed_soh_questions);};}else if(root.insurance_product.product_type=="Group CI"){question_factory=function(question_data){return new GIHealthQuestion(root.insurance_product,question_data,root.selected_plan,[{guarantee_issue_amount:10000,applicant_type:'Employee',age_max:null,age_min:null,weight_min:null,weight_max:null,height_min:null,height_max:null},{guarantee_issue_amount:25000,applicant_type:'Child',age_max:null,age_min:null,weight_min:null,weight_max:null,height_min:null,height_max:null}],"selected",[{question_type_label:"5yr Heart"},{question_type_label:"5yr Hypertension / Cholesterol"},{question_type_label:"5yr Lung / Colon"},{question_type_label:"5yr Skin Cancer"},{question_type_label:"5yr HPV/HSV"},{question_type_label:"Abnormal Results"},{question_type_label:"Ever been rejected"}]);}}else{question_factory=function(question_data){return new StandardHealthQuestion(question_data,root.selected_plan);}}
questions=_.map(product_health_questions,question_factory);}});return questions;}
function Product(){}
Product.prototype={min_emp_age:function(){return 18},max_emp_age:function(){return 70},min_sp_age:function(){return 18},max_sp_age:function(){return 70},min_child_age:function(){return 0},max_child_age:function(){return 23},is_valid_employee:function(employee){var age=employee.get_age();return(age>=this.min_emp_age()&&age<=this.max_emp_age());},is_valid_spouse:function(spouse){var age=spouse.get_age();return(age>=this.min_sp_age()&&age<=this.max_sp_age());},is_valid_child:function(child){var age=child.get_age();return(age>=this.min_child_age()&&age<=this.max_child_age());},get_new_benefit_option:function(options){return new BenefitOption(options);},requires_gender:function(){return false;},requires_height:function(){return false;},requires_weight:function(){return false;},requires_is_smoker:function(){return false;},has_critical_illness_coverages:function(){return false;},all_coverage_options:{employee:ko.observableArray([]),spouse:ko.observableArray([]),children:ko.observableArray([])},find_recommended_coverage_benefit:function(applicant_type,desired_face_value){var benefit=new NullBenefitOption({});$.each(this.all_coverage_options[applicant_type](),function(){if(this.face_value==desired_face_value){benefit=this;return false;}});return benefit;},get_coverage_options_for_applicant:function(applicant_type){return this.all_coverage_options[applicant_type];},get_maximum_coverage_amount:function(applicant_type){var options=this.get_coverage_options_for_applicant(applicant_type)();if(options.length>0){return _.max(_.pluck(options,"face_value"));}
return 0;},parse_benefit_options:function(applicant_type,applicant,rates){var self=this;var all_options=[new NullBenefitOption()];if(rates.bypremium){var by_premium_options=$.map(rates.bypremium,function(rate){return self.get_new_benefit_option({is_by_face:false,face_value:rate.coverage,premium:rate.premium});});$.merge(all_options,by_premium_options);}
if(rates.byface){var by_face_options=$.map(rates.byface,function(rate){return self.get_new_benefit_option({is_by_face:true,face_value:rate.coverage,premium:rate.premium});});$.merge(all_options,by_face_options);}
self.all_coverage_options[applicant_type](all_options);},should_show_step_5:function(){return true;},should_use_date_of_hire_for_identity:function(){return true;},is_fpp_product:function(){return true;},should_confirm_disclosure_notice:function(){return this.is_fpp_product();},should_confirm_payroll_deduction:function(){return this.is_fpp_product();},should_show_contingent_beneficiary:function(){return this.is_fpp_product();},get_replacement_paragraphs:function(){return[];}};function FPPTIProduct(product_data){this.product_type="FPPTI";this.product_data=product_data;}
FPPTIProduct.prototype=Object.create(Product.prototype);FPPTIProduct.prototype.get_replacement_paragraphs=function(){return this.product_data.replacement_paragraphs;};function FPPCIProduct(product_data){this.product_type="FPPCI";this.product_data=product_data;}
FPPCIProduct.prototype=Object.create(Product.prototype);FPPCIProduct.prototype.get_new_benefit_option=function(options){return new CIBenefitOption(new BenefitOption(options));};FPPCIProduct.prototype.has_critical_illness_coverages=function(){return true;};FPPCIProduct.prototype.get_replacement_paragraphs=function(){return this.product_data.replacement_paragraphs;};function GroupCIProduct(root,product_data){var self=this;self.root=root;self.product_type="Group CI";self.product_data=product_data;self.employee_current_benefit_subscription=null;self.spouse_options_for_demographics=ko.observableArray([]);self.all_spouse_rate_options=ko.observableArray([]);self.all_posible_children_options=ko.observableArray([]);self.all_coverage_options={employee:ko.observableArray([]),spouse:ko.observableArray([]),children:ko.observableArray([])};self.update_spouse_coverage_options=function(){var emp_benefit=self.root.selected_plan().employee_recommendation().recommended_benefit;var valid_options=[];var anyYesQuestions=self.root.employee().has_answered_any_question_yes();var null_spouse_option=self.spouse_options_for_demographics()[0];if(!anyYesQuestions&&(!emp_benefit||!emp_benefit.is_valid())){valid_options.push(null_spouse_option);}else if(anyYesQuestions||emp_benefit.face_value>=50000){$.merge(valid_options,self.spouse_options_for_demographics());}else{var limit=emp_benefit.face_value/2.0;$.each(self.spouse_options_for_demographics(),function(){var rate=this;if(rate.face_value<=limit){valid_options.push(rate);}else{if(valid_options.length>0&&valid_options[valid_options.length-1].face_value<limit){var all_options_by_rate=_.indexBy(self.all_spouse_rate_options(),"face_value");if(all_options_by_rate[limit]){valid_options.push(all_options_by_rate[limit]);}}
return false;}});}
self.all_coverage_options.spouse(valid_options);var current_spouse_coverage=self.root.selected_plan().spouse_recommendation().recommended_benefit;if(!_.find(valid_options,function(opt){return opt.face_value==current_spouse_coverage.face_value;})){self.root.selected_plan().spouse_recommendation(new NullRecommendation(null_spouse_option));}
var valid_children_options=[];var null_child_option=self.all_posible_children_options()[0];if(!anyYesQuestions&&(!emp_benefit||!emp_benefit.is_valid())){valid_children_options.push(null_child_option);}else if(anyYesQuestions||emp_benefit.face_value>=10000){$.merge(valid_children_options,self.all_posible_children_options());}else{valid_children_options.push(null_child_option);}
self.all_coverage_options.children(valid_children_options);var current_child_coverage=self.root.selected_plan().children_recommendation().recommended_benefit;if(!_.find(valid_children_options,function(opt){return opt.face_value==current_child_coverage.face_value;})){self.root.selected_plan().children_recommendation(new NullRecommendation(null_child_option));}};self.update_children_coverage_options=function(){var emp_benefit=self.root.selected_plan().employee_recommendation().recommended_benefit;};self.get_coverage_options_for_applicant=function(applicant_type){return this.all_coverage_options[applicant_type];};function convert_rate_to_benefit_option(rate){return self.get_new_benefit_option({is_by_face:true,face_value:rate.coverage,premium:rate.premium});}
self.parse_benefit_options=function(applicant_type,applicant,rates){var self=this;if(applicant_type=="employee"){if(self.employee_current_benefit_subscription===null){self.employee_current_benefit_subscription=applicant.selected_plan.subscribe(self.update_spouse_coverage_options);var subscribe_to_question_answers=function(questions){_.each(questions,function(soh_answer){soh_answer.answer.subscribe(self.update_spouse_coverage_options);});};applicant.health_questions.subscribe(subscribe_to_question_answers);subscribe_to_question_answers(applicant.health_questions());}
var valid_options=[new NullBenefitOption()];var rate_choices=[];$.each(rates.byface,function(){var rate=this;if(rate.coverage%5000==0){rate_choices.push(rate);}});$.merge(valid_options,$.map(rate_choices,convert_rate_to_benefit_option));self.all_coverage_options[applicant_type](valid_options);}
if(applicant_type=="spouse"&&rates.byface!==undefined){var demographic_spouse_rates=[];var all_spouse_rates=[];$.each(rates.byface,function(){var rate=this;if(rate.coverage%5000==0&&rate.coverage<=25000){demographic_spouse_rates.push(rate);}
if(rate.coverage<=25000){all_spouse_rates.push(rate);}});self.spouse_options_for_demographics($.merge([new NullBenefitOption()],$.map(demographic_spouse_rates,convert_rate_to_benefit_option)));self.all_spouse_rate_options($.merge([new NullBenefitOption()],$.map(all_spouse_rates,convert_rate_to_benefit_option)));var sp_options=[new NullBenefitOption()];$.merge(sp_options,$.map(demographic_spouse_rates,convert_rate_to_benefit_option));self.all_coverage_options.spouse(sp_options);}
if(applicant_type=="children"&&rates.byface!==undefined){var ch_options=[new NullBenefitOption()];$.merge(ch_options,$.map(rates.byface,convert_rate_to_benefit_option));self.all_posible_children_options(ch_options);self.all_coverage_options.children(ch_options);}};}
GroupCIProduct.prototype=Object.create(Product.prototype);GroupCIProduct.prototype.is_valid_employee=function(employee){var age=employee.get_age();var valid=(age>=this.min_emp_age()&&age<=this.max_emp_age());valid&=employee.is_smoker()!=null;valid&=employee.has_valid_weight();valid&=employee.has_valid_height();valid&=employee.has_valid_gender();return valid;};GroupCIProduct.prototype.is_valid_spouse=function(spouse){var age=spouse.get_age();var valid=(age>=this.min_sp_age()&&age<=this.max_sp_age());valid&=spouse.is_smoker()!=null;valid&=spouse.has_valid_weight();valid&=spouse.has_valid_height();valid&=spouse.has_valid_gender();return valid;};GroupCIProduct.prototype.requires_gender=function(){return true;};GroupCIProduct.prototype.requires_height=function(){return true;};GroupCIProduct.prototype.requires_weight=function(){return true;};GroupCIProduct.prototype.requires_is_smoker=function(){return true;};GroupCIProduct.prototype.has_critical_illness_coverages=function(){return true;};GroupCIProduct.prototype.should_show_step_5=function(){return false;};GroupCIProduct.prototype.should_use_date_of_hire_for_identity=function(){return false;};GroupCIProduct.prototype.is_fpp_product=function(){return false;};function FPPGovProduct(product_data){this.product_type="FPP-Gov";this.product_data=product_data;}
FPPGovProduct.prototype=Object.create(Product.prototype);FPPGovProduct.prototype.requires_gender=function(){return false;};FPPGovProduct.prototype.requires_height=function(){return false;};FPPGovProduct.prototype.requires_weight=function(){return false;};FPPGovProduct.prototype.requires_is_smoker=function(){return false;};FPPGovProduct.prototype.has_critical_illness_coverages=function(){return false;};FPPGovProduct.prototype.get_replacement_paragraphs=function(){return this.product_data.replacement_paragraphs;};function GIProductDecorator(product,product_data){var self=this;self.product=product;self.product_data=product_data;self.product_type=product.product_type;self.all_coverage_options={employee:ko.observableArray([]),spouse:ko.observableArray([]),children:ko.observableArray([])};_.each(_.methods(product),function(method){self[method]=function(){return self.product[method].apply(self,arguments);}});}
var GlobalSOHQuestion=function(question_text){var self=this;self.question_text=question_text;};GlobalSOHQuestion.prototype.get_question_text=function(){return this.question_text;};var NonHealthQuestion=function(question_text){var self=this;self.question_text=question_text;};NonHealthQuestion.prototype.get_question_text=function(){return this.question_text;};var StandardHealthQuestion=function(question,selected_plan){var self=this;self.selected_plan=selected_plan;self.question=question;self.does_employee_need_to_answer=ko.computed(function(){return self.selected_plan().did_select_employee_coverage();});self.does_spouse_need_to_answer=ko.computed(function(){return self.selected_plan().did_select_spouse_coverage();});self.does_child_need_to_answer=function(child){return self.selected_plan().did_select_children_coverage();};self.show_yes_dialogue_employee=function(){return self.show_yes_dialogue();};self.show_yes_dialogue_spouse=function(){return self.show_yes_dialogue();};self.show_yes_dialogue_child=function(child){return self.show_yes_dialogue();};self.show_yes_dialogue=function(){handle_question_yes();};self.does_any_applicant_need_to_answer=ko.computed(function(){return _.any(self.selected_plan().get_covered_applicants_with_type(),function(data){return self.does_applicant_need_to_answer(data.type,data.applicant);});});};StandardHealthQuestion.prototype.get_question_text=function(){return this.question.question_text;};StandardHealthQuestion.prototype.get_question_label=function(){return this.question.label;};StandardHealthQuestion.prototype.does_applicant_need_to_answer=function(applicant_type,applicant){return true;};var GIHealthQuestion=function(product,question,selected_plan,applicant_criteria,skip_mode,skipped_questions){var self=this;self.product=product;self.selected_plan=selected_plan;self.question=question;self.applicant_criteria=applicant_criteria;self.skip_mode=skip_mode;self.skipped_questions=skipped_questions;self.does_employee_need_to_answer=ko.computed(function(){if(!self.selected_plan())return false;if(!self.selected_plan().did_select_employee_coverage()){return false;}
if(self.has_employee_met_GI_criteria()&&self.should_skip_if_GI_criteria_met()){return false;}
return true;});self.does_spouse_need_to_answer=ko.computed(function(){if(!self.selected_plan())return false;if(!self.selected_plan().did_select_spouse_coverage()){return false;}
if(self.has_spouse_met_GI_criteria()&&self.should_skip_if_GI_criteria_met()){return false;}
return true;});self.does_child_need_to_answer=function(child_applicant){if(!self.selected_plan())return false;if(!self.selected_plan().did_select_children_coverage()){return false;}
if(self.has_child_met_GI_criteria(child_applicant)&&self.should_skip_if_GI_criteria_met()){return false;}
return true;};self.get_met_gi_criteria_for_employee=ko.computed(function(){if(!self.selected_plan().did_select_employee_coverage()){return undefined;}
var coverage=self.selected_plan().employee_recommendation().recommended_benefit;var applicant=self.selected_plan().root.employee();var employee_criteria=self.get_criteria("Employee");return _.find(employee_criteria,function(criterion){return self.does_applicant_meet_GI_criteria(applicant,coverage,criterion);});});self.has_employee_met_GI_criteria=ko.computed(function(){return self.get_met_gi_criteria_for_employee()!==undefined;});self.get_met_gi_criteria_for_spouse=ko.computed(function(){if(!self.selected_plan().did_select_spouse_coverage()){return undefined;}
var coverage=self.selected_plan().spouse_recommendation().recommended_benefit;var applicant=self.selected_plan().root.spouse();var criteria=self.get_criteria("Spouse");return _.find(criteria,function(criterion){return self.does_applicant_meet_GI_criteria(applicant,coverage,criterion);});});self.has_spouse_met_GI_criteria=ko.computed(function(){return self.get_met_gi_criteria_for_spouse()!==undefined;});self.get_met_gi_criteria_for_child=function(child_applicant){if(!self.selected_plan().did_select_children_coverage()){return undefined;}
var criteria=self.get_criteria("Child");var coverage=self.selected_plan().children_recommendation().recommended_benefit;return _.find(criteria,function(criterion){return self.does_applicant_meet_GI_criteria(child_applicant,coverage,criterion);});};self.has_child_met_GI_criteria=function(child_applicant){return self.get_met_gi_criteria_for_child(child_applicant)!==undefined;};self.does_any_applicant_need_to_answer=ko.computed(function(){return _.any(self.selected_plan().get_covered_applicants_with_type(),function(data){return self.does_applicant_need_to_answer(data.type,data.applicant);});});self.show_yes_dialogue_employee=function(){self.show_yes_dialogue('Employee',self.selected_plan().root.employee());};self.show_yes_dialogue_spouse=function(){self.show_yes_dialogue('Spouse',self.selected_plan().root.spouse());};self.show_yes_dialogue_child=function(child){self.show_yes_dialogue('Children',child);};self.get_best_GI_criteria=function(applicant,coverage,criteria){var descendingCriteria=_.sortBy(criteria,function(c){return-c.guarantee_issue_amount;});return _.find(descendingCriteria,function(criterion){return(self.does_applicant_meet_demographic_GI_criteria(applicant,criterion)&&criterion.guarantee_issue_amount<coverage.face_value);});};self.show_yes_dialogue=function(applicant_type,applicant){if(!self.should_skip_if_GI_criteria_met()){handle_question_yes();return;}
var criteria=self.get_criteria(applicant_type);var coverage,reduced_gi_criterion,applicant_coverage_options,coverage_applicant;if(applicant_type=="Employee"){coverage=self.selected_plan().employee_recommendation().recommended_benefit;reduced_gi_criterion=self.get_best_GI_criteria(applicant,coverage,criteria);applicant_coverage_options=self.product.get_coverage_options_for_applicant('employee');coverage_applicant=applicant;}else if(applicant_type=="Spouse"){coverage=self.selected_plan().spouse_recommendation().recommended_benefit;reduced_gi_criterion=self.get_best_GI_criteria(applicant,coverage,criteria);applicant_coverage_options=self.product.get_coverage_options_for_applicant('spouse');coverage_applicant=applicant;}else if(applicant_type=="Children"){coverage=self.selected_plan().children_recommendation().recommended_benefit;reduced_gi_criterion=self.get_best_GI_criteria(applicant,coverage,criteria);applicant_coverage_options=self.product.get_coverage_options_for_applicant('children');coverage_applicant=self.selected_plan().root.child_benefits();}
if(!reduced_gi_criterion){handle_question_yes();return;}
var face_amount=coverage.format_face_value();var gi_amount=reduced_gi_criterion.guarantee_issue_amount;var formatted_gi_amount=format_face_value(gi_amount);var button_options={reduce:{label:"Reduce the coverage",className:'btn-success',callback:function(){var max_option=_.max(_.filter(applicant_coverage_options(),function(o){return o.face_value<=gi_amount&&o.face_value>0}),function(o){return o.face_value});coverage_applicant.selected_custom_option(max_option);self.selected_plan().root.apply_selected_customization();}},remove:{label:"Remove this applicant",className:'btn-danger',callback:function(){if(applicant_type=="Children"){self.selected_plan().root.children.remove(applicant);}else{var null_option=_.find(applicant_coverage_options(),function(o){return o.face_value==0});coverage_applicant.selected_custom_option(null_option);self.selected_plan().root.apply_selected_customization();}}},ignore:{label:"Ignore and Continue",className:'btn-default',callback:function(){}}};bootbox.dialog({message:'A "yes" response to this question prohibits this person from obtaining the selected '+face_amount+' of coverage. You may proceed, however, by reducing your coverage to the guaranteed coverage amount of '+formatted_gi_amount+'.'+'<br><br>Alternatively, you may remove this individual from the coverage selection altogether (in Step 1) before proceeding with the rest of the application.',buttons:button_options});};self.get_criteria=function(applicant_type){if(applicant_type=="Children"){applicant_type="Child";}
return _.filter(self.applicant_criteria,function(c){return c.applicant_type==applicant_type;});};self.does_applicant_meet_GI_criteria=function(applicant,coverage,criterion){return(self.does_applicant_meet_coverage_GI_criteria(applicant,coverage,criterion)&&self.does_applicant_meet_demographic_GI_criteria(applicant,criterion));};self.does_applicant_meet_coverage_GI_criteria=function(applicant,coverage,criterion){return coverage.face_value<=criterion.guarantee_issue_amount;};self.does_applicant_meet_demographic_GI_criteria=function(applicant,criterion){var does_meet=true;if(criterion.age_max!==null){does_meet&=applicant.get_age()<=criterion.age_max;}
if(criterion.age_min!==null){does_meet&=applicant.get_age()>=criterion.age_min;}
if(criterion.height_max!==null){does_meet&=applicant.height()!==null&&applicant.height()<=criterion.height_max}
if(criterion.height_min!==null){does_meet&=applicant.height()!==null&&applicant.height()>=criterion.height_min;}
if(criterion.weight_max!==null){does_meet&=applicant.weight()!==null&&applicant.weight()<=criterion.weight_max}
if(criterion.weight_min!==null){does_meet&=applicant.weight()!==null&&applicant.weight()>=criterion.weight_min;}
return does_meet;};};GIHealthQuestion.prototype=Object.create(StandardHealthQuestion.prototype);GIHealthQuestion.prototype.does_applicant_need_to_answer=function(applicant_type,applicant){var self=this;if(applicant_type=="Employee"){return self.does_employee_need_to_answer();}else if(applicant_type=="Spouse"){return self.does_spouse_need_to_answer();}else if(applicant_type=="Child"){return self.does_child_need_to_answer(applicant);}
console.error("Got unknown applicant type '"+applicant_type+"'");return true;};GIHealthQuestion.prototype.should_skip_if_GI_criteria_met=function(){var self=this;if(self.skip_mode=="all"){return true;}else{return _.any(self.skipped_questions,function(q){return self.get_question_label()==q.question_type_label});}};function HealthQuestionAnswer(question){var self=this;self.question=question;self.button_group=ko.observable(null);self.answer=ko.computed(function(){if(self.button_group()==null){return null;}else{return self.button_group().get_val();}});self.serialize=function(){var answer;if(self.button_group()){answer=(self.button_group().is_required())?self.button_group().get_val():"GI";}else{answer=null;}
return{question:self.question.question_text,answer:answer}};}
function Beneficiary(options){var self=this;var defaults={name:"",relationship:"",ssn:"",date_of_birth:"",is_nonperson_entity:false};options=$.merge({},defaults,options);self.name=ko.observable(options.name);self.relationship=ko.observable(options.relationship);self.ssn=ko.observable(options.ssn);self.date_of_birth=ko.observable(options.date_of_birth);self.is_nonperson_entity=ko.observable(options.is_nonperson_entity);self.serialize=function(){return{name:self.name(),relationship:self.relationship(),ssn:self.ssn(),date_of_birth:self.date_of_birth(),is_nonperson_entity:self.is_nonperson_entity()};};}
var _applicant_count=0;function InsuredApplicant(applicant_type,options,selected_plan,product_health_questions){var self=this;var defaults={first:"",last:"",email:"",phone:"",birthdate:null,ssn:"",gender:null,height:null,weight:null,is_smoker:null,street_address:"",street_address2:"",city:"",state:"",zip:"",existing_coverages:[]};var applicant_data=$.extend({},defaults,options);self.applicant_type=applicant_type;self.selected_plan=selected_plan;self._id=_applicant_count++;self.first=ko.observable(applicant_data.first);self.last=ko.observable(applicant_data.last);self.email=ko.observable(applicant_data.email);self.phone=ko.observable(applicant_data.phone);self.birthdate=ko.observable(applicant_data.birthdate);self.ssn=ko.observable(applicant_data.ssn);self.gender=ko.observable(applicant_data.gender);self.height=ko.observable(parseFloat(applicant_data.height)?parseFloat(applicant_data.height):null);self.weight=ko.observable(applicant_data.weight);self.is_smoker=ko.observable(applicant_data.is_smoker);self.height_error=ko.observable(null);self.weight_error=ko.observable(null);self.address1=ko.observable(applicant_data.street_address);self.address2=ko.observable(applicant_data.street_address2);self.city=ko.observable(applicant_data.city);self.state=ko.observable(applicant_data.state);self.zip=ko.observable(applicant_data.zip);self.existing_coverages=applicant_data.existing_coverages||[];self.health_questions=ko.computed(function(){var questions=[];_.each(product_health_questions(),function(hq){var q=new HealthQuestionAnswer(hq.question,null);questions.push(q);});return questions;});self.has_answered_any_question_yes=ko.pureComputed(function(){return _.any(self.health_questions(),function(soh_answer){return soh_answer.answer()=="Yes";});});self.has_valid_gender=ko.pureComputed(function(){return self.gender()!==null;});self.has_valid_height=ko.computed(function(){return self.height()!=null&&self.height()>0&&self.height_error()==null;});self.has_valid_weight=ko.computed(function(){return self.weight()!=null&&self.weight_error()==null;});self.is_valid=ko.computed(function(){return($.trim(self.first())!=""&&$.trim(self.last())!=""&&$.trim(self.birthdate())!="");});self.any_valid_field=ko.computed(function(){return($.trim(self.first())!=""||$.trim(self.last())!=""||$.trim(self.birthdate())!="");});self.name=ko.computed(function(){if(self.is_valid()){return self.first();}else{return"";}});self.get_age=ko.computed(function(){return age_for_date(self.birthdate());});self.benefit_options={by_coverage:ko.observableArray([]),by_premium:ko.observableArray([])};self.all_options=ko.computed(function(){var options=[new NullBenefitOption()];$.merge(options,self.benefit_options.by_premium());$.merge(options,self.benefit_options.by_coverage());return options;});self.selected_custom_option=ko.observable(new NullBenefitOption());self.selected_coverage=ko.computed(function(){if(self.applicant_type==InsuredApplicant.EmployeeType){return self.selected_plan().employee_recommendation().recommended_benefit;}else if(self.applicant_type==InsuredApplicant.SpouseType){return self.selected_plan().spouse_recommendation().recommended_benefit;}else if(self.applicant_type==InsuredApplicant.ChildType){return self.selected_plan().children_recommendation().recommended_benefit;}
throw"Bad applicant type for applicant: "+self.applicant_type;});self.display_selected_coverage=ko.computed(function(){return self.selected_coverage().format_face_value();});self.display_premium=ko.computed(function(){return self.selected_coverage().format_premium();});self.get_existing_coverage_amount_for_product=function(product_id){return parseFloat(self.get_existing_coverage_amount_by_product()[product_id]);};self.get_existing_coverage_amount_by_product=function(){return _.reduce(self.existing_coverages,function(by_product_id,coverage){if(!(coverage.product.id in by_product_id)){by_product_id[coverage.product.id]=0.0;}
by_product_id[coverage.product.id]+=parseFloat(coverage.coverage_face_value);return by_product_id;},{});};self.serialize_data=function(){var data={};data.first=self.first();data.last=self.last();data.email=self.email();data.age=self.get_age();data.weight=self.weight();data.height=self.height();data.is_smoker=self.is_smoker();data.birthdate=self.birthdate();data.ssn=self.ssn();data.gender=self.gender();data.phone=self.phone();data.address1=self.address1();data.address2=self.address2();data.city=self.city();data.state=self.state();data.zip=self.zip();data.soh_questions=[];_.each(self.health_questions(),function(soh_answer){data.soh_questions.push(soh_answer.serialize());});return data;}}
InsuredApplicant.EmployeeType="employee";InsuredApplicant.SpouseType="spouse";InsuredApplicant.ChildType="children";function age_for_date(date){var bd=parse_date(date,"MM/DD/YYYY");if(bd.isValid()){if(bd.isAfter(now())){return-1;}else{return now().diff(bd,"years");}}else{return"";}}
function BenefitOption(options){var self=this;self.is_by_face=options.is_by_face;self.premium=options.premium;self.face_value=options.face_value;self.format_premium=function(){return format_premium_value(self.premium);};self.format_premium_option=function(){return self.format_premium()+" "+ui.payment_mode_text_lower();};self.format_face_value=function(){return format_face_value(self.face_value);};self.format_face_option=function(){return self.format_face_value()+" face amount";};self.format_for_dropdown=function(){if(self.is_by_face){return self.format_face_option();}else{return self.format_premium_option();}};self.is_valid=function(){return true;};self.serialize_data=function(){return{premium:self.premium,face_value:self.face_value}}}
BenefitOption.display_benefit_option=function(item){return item.format_for_dropdown();};function CIBenefitOption(wrapped_option){var self=this;self.is_by_face=wrapped_option.is_by_face;self.premium=wrapped_option.premium;self.face_value=wrapped_option.face_value;self.format_premium=wrapped_option.format_premium;self.format_premium_option=wrapped_option.format_premium_option;self.format_face_value=function(){var face_value_formatted=format_face_value(self.face_value);var ci_value=Math.round(self.face_value*.3);var ci_value_formatted=format_face_value(ci_value);return face_value_formatted+"<br><small>("+ci_value_formatted+" CI)</small>";};self.format_for_dropdown=wrapped_option.format_for_dropdown;self.is_valid=wrapped_option.is_valid;self.serialize_data=wrapped_option.serialize_data;}
function NullBenefitOption(){var self=this;self.is_by_face=true;self.premium=0;self.face_value=0;self.is_valid=function(){return false;};self.format_premium_option=function(){return"";};self.format_premium=function(){};self.format_face_value=function(){return"- no benefit -";};self.format_for_dropdown=function(){return"- no benefit -";};self.serialize_data=function(){return{}}}
function BenefitsPackage(root,name){var self=this;self.root=root;self.name=ko.observable(name);self.employee_recommendation=ko.observable(new NullRecommendation());self.spouse_recommendation=ko.observable(new NullRecommendation());self.children_recommendation=ko.observable(new NullRecommendation());self.set_recommendations=function(recommendations){if(root.employee().is_valid()){self.employee_recommendation(self.build_recommendation(self.root.employee(),recommendations['employee']));}else{self.employee_recommendation(new NullRecommendation());}
if(root.should_include_spouse_in_table()){self.spouse_recommendation(self.build_recommendation(self.root.spouse(),recommendations['spouse']));}else{self.spouse_recommendation(new NullRecommendation());}
if(root.should_include_children_in_table()){self.children_recommendation(self.build_recommendation(self.root.child_benefits(),recommendations['children']));}else{self.children_recommendation(new NullRecommendation());}};self.build_recommendation=function(applicant,recommended_val){var benefit=self.get_recommended_benefit(applicant,recommended_val);return new Recommendation(benefit);};self.get_recommended_benefit=function(applicant,recommended_val){if(recommended_val==null||recommended_val==""){return new NullBenefitOption();}else{var applicant_type;if(applicant==root.employee()){applicant_type="employee";}else if(applicant==root.spouse()){applicant_type="spouse";}else{applicant_type="children";}
return root.insurance_product.find_recommended_coverage_benefit(applicant_type,recommended_val);}};self.get_package_benefits=function(){var benefits=[self.employee_recommendation().recommended_benefit,self.spouse_recommendation().recommended_benefit];if(self.children_recommendation().recommended_benefit){for(var i=0;i<self.root.get_valid_children().length;i++){benefits.push(self.children_recommendation().recommended_benefit);}}
return benefits;};self.get_total_premium=ko.computed(function(){var benefits=self.get_package_benefits();var total=0.0;$.each(benefits,function(){if(this.premium!=null){total+=this.premium;}});return total;});self.formatted_total_premium=ko.computed(function(){if(self.get_total_premium()>0.0){return format_premium_value(self.get_total_premium());}else{return"";}});self.is_valid=function(){return true};self.did_select_employee_coverage=ko.computed(function(){return self.employee_recommendation().recommended_benefit.is_valid();});self.did_select_spouse_coverage=ko.computed(function(){return self.spouse_recommendation().recommended_benefit.is_valid();});self.did_select_children_coverage=ko.computed(function(){return self.children_recommendation().recommended_benefit.is_valid();});self.get_all_people=ko.computed(function(){var employee=root.employee();var people=[employee];if(root.should_include_spouse_in_table()){var spouse=root.spouse();people.push(spouse);}
if(root.should_include_children_in_table()){$.each(root.get_valid_children(),function(){var child=this;people.push(child);});}
return people;});self.get_all_covered_people=ko.computed(function(){var people=[];if(root.did_select_employee_coverage()){var employee=root.employee();people.push(employee);}
if(root.did_select_spouse_coverage()){var spouse=root.spouse();people.push(spouse);}
if(root.did_select_children_coverage()){$.each(root.get_valid_children(),function(){var child=this;people.push(child);});}
return people;});self.get_all_people_labels=ko.computed(function(){var labels=[root.employee().name()];if(root.should_include_spouse_in_table()){labels.push(root.spouse().name());}
if(root.should_include_children_in_table()){$.each(root.get_valid_children(),function(){var child=this;labels.push(child.name());});}
return labels;});self.get_all_covered_people_labels=ko.computed(function(){var labels=[];if(root.did_select_employee_coverage()){labels.push(root.employee().name());}
if(root.did_select_spouse_coverage()){labels.push(root.spouse().name());}
if(root.did_select_children_coverage()){$.each(root.get_valid_children(),function(){var child=this;labels.push(child.name());});}
return labels;});self.get_covered_applicants_with_type=ko.computed(function(){var applicants=[];if(root.did_select_employee_coverage()){applicants.push({applicant:root.employee(),type:"Employee",coverage:self.employee_recommendation().recommended_benefit});}
if(root.did_select_spouse_coverage()){applicants.push({applicant:root.spouse(),type:"Spouse",coverage:self.spouse_recommendation().recommended_benefit});}
if(root.did_select_children_coverage()){$.each(root.get_valid_children(),function(){var child=this;applicants.push({applicant:child,type:"Child",coverage:self.children_recommendation().recommended_benefit});});}
return applicants;});self.get_covered_children=ko.computed(function(){return _.map(_.filter(self.get_covered_applicants_with_type(),function(d){return d.type=="Child";}),function(d){return d.applicant;});});self.get_people_with_labels=ko.computed(function(){var people=self.get_all_people();var labels=self.get_all_people_labels();var out=[];for(var i=0;i<people.length;i++){out.push({person:people[i],label:labels[i]});}
return out;});self.has_at_least_one_benefit_selected=function(){var any_benefits=false;$.each(self.get_package_benefits(),function(){if(this.is_valid()){any_benefits=true;return false;}});return any_benefits;};}
function NullBenefitsPackage(root){var self=this;self.root=root;self.employee_recommendation=ko.observable(new NullRecommendation());self.spouse_recommendation=ko.observable(new NullRecommendation());self.children_recommendation=ko.observable(new NullRecommendation());self.get_total_premium=function(){return null;};self.formatted_total_premium=function(){return"";};self.is_valid=function(){return false};self.get_all_people=function(){return[];};self.get_all_covered_people=function(){return[];};self.get_covered_applicants_with_type=function(){return[];};self.get_all_people_labels=function(){return[];};self.get_all_covered_people_labels=function(){return[];};self.get_people_with_labels=function(){return[];};self.has_at_least_one_benefit_selected=function(){return false;};self.did_select_employee_coverage=function(){return false;};self.did_select_spouse_coverage=function(){return false;};self.did_select_children_coverage=function(){return false;};self.get_covered_children=function(){return[];}};function Recommendation(recommended_benefit){var self=this;self.recommended_benefit=recommended_benefit;self.is_valid=function(){return true;};self.format_premium_option=function(){return self.recommended_benefit.format_premium_option()};self.format_face_value=function(){return self.recommended_benefit.format_face_value();};}
function NullRecommendation(option){var self=this;self.recommended_benefit=option||new NullBenefitOption();self.is_valid=function(){return false;};}
function QuestionButton(element,val,highlight_func,unhighlight_func){var self=this;self.elements=[$(element)];self.val=val;self.highlight=function(){$.each(self.elements,function(){highlight_func(this);});};self.unhighlight=function(){$.each(self.elements,function(){unhighlight_func(this);});};}
function QuestionButtonGroup(question,is_required){var self=this;self.question=question;self.buttons=[];self.selected_btn=ko.observable(null);self.is_required=is_required;self.get_val=ko.computed(function(){if(self.selected_btn()==null){return false;}else{return self.selected_btn().val;}});self.add_button=function(element,val,high_func,unhigh_func){var btn=null;$.each(self.buttons,function(){if(this.val==val){btn=this;}});if(btn){btn.elements.push(element);}else{self.buttons.push(new QuestionButton(element,val,high_func,unhigh_func));}};self.click_button=function(val){var btn=null;$.each(self.buttons,function(){if(this.val==val){btn=this;}
this.unhighlight();});btn.highlight();self.selected_btn(btn);};}
var questions=[];var general_questions_by_id={};ko.bindingHandlers.flagBtn={init:function(element,value_accessor){var val=ko.unwrap(value_accessor());var btn_group;if(val.applicant){var applicant=val.applicant;var question_text=val.question.get_question_text();var applicant_health_answer=_.find(applicant.health_questions(),function(soh_answer){return soh_answer.question.question_text==question_text;});btn_group=applicant_health_answer.button_group();if(!btn_group){btn_group=new QuestionButtonGroup(val.question,val.is_required);applicant_health_answer.button_group(btn_group);}
if(applicant_health_answer.answer()==val.val){btn_group.click_button(val.val);}}else{var group_lookup=general_questions_by_id;if(val.question.get_question_text()in group_lookup){btn_group=group_lookup[val.question.get_question_text()];}else{btn_group=new QuestionButtonGroup(val.question,val.is_required);group_lookup[val.question.get_question_text()]=btn_group;}
if(val.is_selected===true){btn_group.click_button(val.val);}}
btn_group.add_button(element,val.val,function(el){if(val.highlight=="flag"){$(el).prepend('<i class="icon glyphicon glyphicon-flag"></i>').addClass("btn btn-warning");}else if(val.highlight=="checkmark"){$(el).prepend('<i class="icon glyphicon glyphicon-ok"></i>').addClass("btn-success");}else if(val.highlight=="stop"){$(el).prepend('<i class="icon glyphicon glyphicon-remove"></i>').addClass("btn-danger");}},function(el){$(el).removeClass("btn-success btn-warning btn-danger").addClass("btn-default");$(el).find(".glyphicon").remove();});$(element).on("click",function(){btn_group.click_button(val.val);if(val.onclick){val.onclick();}});if(btn_group.selected_btn&&btn_group.selected_btn.val==val.val){btn_group.click_button(val.val);}},update:function(element,value_accessor){}};function handle_existing_insurance_modal(){if(ui.insurance_product.is_fpp_product()){}else{$("#modal_text_existing_warning_title").show();$("#modal_text_replacement_warning_title").hide();$("#modal_text_soh_warning_title").hide();$("#modal_text_existing_warning").show();$("#modal_text_replacement_warning").hide();$("#modal_text_soh_warning").hide();$("#health_modal").modal('show');$("#existing_warning_text").show();}
window.ui.existing_insurance(true);}
function reset_existing_insurance_warning(){window.ui.existing_insurance(false);$("#existing_warning_text_remote").hide();$("#existing_warning_text").hide();}
function handle_replacement_insurance_modal(){if(ui.insurance_product.is_fpp_product()){}else{$("#modal_text_existing_warning_title").hide();$("#modal_text_replacement_warning_title").show();$("#modal_text_soh_warning_title").hide();$("#modal_text_existing_warning").hide();$("#modal_text_existing_warning_remote").hide();$("#modal_text_replacement_warning").show();$("#modal_text_soh_warning").hide();$("#health_modal").modal('show');$("#replacement_warning_text").show();}
window.ui.replacing_insurance(true);}
function reset_replacement_insurance_warning(){$("#replacement_warning_text").hide();window.ui.replacing_insurance(false);}
function handle_question_yes(){$("#modal_text_existing_warning_title").hide();$("#modal_text_replacement_warning_title").hide();$("#modal_text_soh_warning_title").show();$("#modal_text_existing_warning").hide();$("#modal_text_existing_warning_remote").hide();$("#modal_text_replacement_warning").hide();$("#modal_text_soh_warning").show();$("#health_modal").modal('show');}
function are_health_questions_valid(){if(ui.should_show_other_insurance_questions()&&ui.is_in_person_application()&&general_questions_by_id['existing_insurance'].get_val()===null){return false;}
if(ui.should_show_other_insurance_questions()&&(!ui.insurance_product.is_fpp_product()&&general_questions_by_id['replace_insurance'].get_val()!="No")||(ui.insurance_product.is_fpp_product()&&general_questions_by_id['replace_insurance'].get_val()===null)){return false;}
if(ui.insurance_product.is_fpp_product()){if(ui.is_employee_actively_at_work()===null){return false;}
if(ui.did_select_spouse_coverage()&&(ui.has_spouse_been_treated_6_months()===null||ui.has_spouse_been_disabled_6_months()===null||ui.has_spouse_been_disabled_6_months()===true)){return false;}}
var valid=true;$.each(window.ui.selected_plan().get_all_covered_people(),function(){var covered_person=this;$.each(covered_person.health_questions(),function(){if(this.button_group()&&this.button_group().is_required()&&this.button_group().get_val()!="No"){valid=false;return false;}});if(!valid){return false;}});return valid;}
function format_face_value(val){if(val==null){return"(NA)";}
return"$"+numberWithCommas(val);}
function format_premium_value(val){if(val==null){return"(NA)";}
return"$"+numberWithCommas(val.toFixed(2));}
function handle_remote_error(){alert("Sorry, an error occurred communicating with the server.");}
function ajax_post(url,data,on_success,on_error,is_json){var options={data:data,error:on_error,success:on_success,dataType:"json",method:"POST"};if(is_json===true){options.contentType="application/json; charset=utf-8";options.processData=false;options.data=JSON.stringify(data);}
$.ajax(url,options);}
function init_validation(){$(document).on('change','input:radio[id^="eeOwner-"]',function(){var other=$('#eeOtherOwner');var inp=$('#eeOtherOwnerName').get(0);var inpss=$('#eeOtherOwnerSSN').get(0);if(other.hasClass('hide')){other.fadeIn("medium");other.removeClass('hide');inp.removeAttribute('disabled');inp.placeholder="Full Name";inpss.removeAttribute('disabled');}else{$('#eeOtherOwner').addClass('hide');inp.setAttribute('disabled','disabled');inp.placeholder="employee is policy owner";inp.value="";inpss.setAttribute('disabled','disabled');inpss.value="";}});$(document).on('change','input:radio[id^="spOwner-"]',function(){var other=$('#spOtherOwner');var inp=$('#spOtherOwnerName').get(0);var inpss=$('#spOtherOwnerSSN').get(0);if(other.hasClass('hide')&&$('#spOwner-other').prop('checked')){other.fadeIn("medium");other.removeClass('hide');inp.removeAttribute('disabled');inp.placeholder="Full Name";inpss.removeAttribute('disabled');}else{$('#spOtherOwner').addClass('hide');inp.setAttribute('disabled','disabled');inp.placeholder="employee/spouse is policy owner";inp.value="";inpss.setAttribute('disabled','disabled');inpss.value="";}});$('[data-rel=tooltip]').tooltip();var validation_debug=false;$('#fuelux-wizard').ace_wizard().on('change',function(e,info){if(validation_debug){return true;}
if(info.step==1){$("#health_questions_error").html("");if(ui.did_decline()){submit_decline();return false;}
var is_valid=window.ui.validator.form();if(!window.ui.is_form_valid()){window.ui.show_no_selection_error();return false;}
var current_product_id=ui.insurance_product.product_data.id;var plan=ui.selected_plan();function validate_coverage_amount(applicant,applicant_type,selected_coverage){var existing_coverage_amount=applicant.get_existing_coverage_amount_for_product(current_product_id);if(!existing_coverage_amount){return true;}
var applied_coverage_amount=(selected_coverage.is_valid())?selected_coverage.face_value:0;var max_coverage_amount=ui.insurance_product.get_maximum_coverage_amount(applicant_type);var name=applicant.name();if(existing_coverage_amount&&(max_coverage_amount<existing_coverage_amount+applied_coverage_amount)){var additional_allowed_coverage=max_coverage_amount-existing_coverage_amount;additional_allowed_coverage=_.max([0,additional_allowed_coverage]);var msg=("Due to one or more previous applications this enrollment period for "+
format_face_value(existing_coverage_amount)+" coverage, "+name+" can apply for a maximum of "+
format_face_value(additional_allowed_coverage)+" additional coverage.");alert(msg);return false;}
return true;}
_.each(plan.get_covered_applicants_with_type(),function(val){var applicant_type={"Employee":"employee","Spouse":"spouse","Child":"children"}[val.type];var can_apply=validate_coverage_amount(val.applicant,applicant_type,val.coverage);if(!can_apply){is_valid=false;}});return is_valid;}
if(info.step==2&&info.direction=='next'){var is_valid=true;if(ui.insurance_product.is_fpp_product()&&(ui.should_show_replacement_form())){is_valid&=$('#questions-form').valid();}
if(ui.insurance_product.is_fpp_product()&&(ui.replacing_insurance()===null||ui.existing_insurance()===null)){is_valid=false;}
if(ui.insurance_product.is_fpp_product()&&ui.is_KY_OR_KS()&&ui.replacing_insurance()){is_valid=false;}
if(ui.insurance_product.is_fpp_product()&&ui.is_self_enroll()&&(ui.replacement_is_terminating()||ui.replacement_using_funds())){is_valid=false;}
is_valid&=are_health_questions_valid();if(!is_valid){$("#health_questions_error").html("Please answer all questions for all applicants.  Invalid responses may prevent you from continuing this online application; if so, please see your agent or enrollment professional.");return false;}else{$("#health_questions_error").html("");return true;}}
if(info.step==3&&info.direction=='next'){if(!$('#step3-form').valid())return false;}
if(info.step==4&&info.direction=='next'){if(!$('#step4-form').valid())return false;}
if(info.step==5&&info.direction=='next'){var skip_for_now=false;if(skip_for_now){return true;}
if(!$('#step5-form').valid()){return false;}
if(window.ui.has_contingent_beneficiary_error()){return false;}}
if(info.step==6&&info.direction=='next'){if(!$('#step6-form').valid())return false;}
return true;}).on('finished',function(e){if(!$('#step6-form').valid())return false;if(window.ui.insurance_product.should_confirm_disclosure_notice()&&!window.ui.disclaimer_notice_confirmed()){bootbox.dialog({message:"Please confirm that you have received the disclosure notice.",buttons:{"danger":{"label":"OK","className":"btn-warning"}}});return false;}
if(window.ui.insurance_product.should_confirm_payroll_deduction()&&!window.ui.payroll_deductions_confirmed()){bootbox.dialog({message:"Please confirm that you agree to payroll deductions by your employer.",buttons:{"danger":{"label":"OK","className":"btn-warning"}}});return false;}
submit_application();}).on('stepclick',function(e){return true;});function submit_application(){var agent_data=window.ui.defaults;delete agent_data['products'];var wizard_results={health_questions:$.map(window.ui.health_questions(),function(q){return q.question}),agent_data:agent_data,enrollCity:window.ui.enrollCity(),enrollState:window.ui.enrollState,product_type:window.ui.insurance_product.product_type,payment_mode:window.ui.payment_mode(),payment_mode_text:window.ui.payment_mode_text_lower(),method:(ui.is_in_person_application())?'in_person':'self_enroll_email',did_decline:ui.did_decline(),identityToken:window.ui.identityToken(),identityType:window.ui.identityType(),employee:window.ui.employee().serialize_data(),spouse:window.ui.spouse().serialize_data(),is_spouse_address_same_as_employee:ui.is_spouse_address_same_as_employee(),is_spouse_email_same_as_employee:ui.is_spouse_email_same_as_employee(),existing_insurance:window.ui.existing_insurance(),replacing_insurance:window.ui.replacing_insurance(),is_employee_actively_at_work:ui.is_employee_actively_at_work(),has_spouse_been_treated_6_months:ui.has_spouse_been_treated_6_months(),has_spouse_been_disabled_6_months:ui.has_spouse_been_disabled_6_months(),employee_owner:window.ui.policy_owner(),employee_other_owner_name:window.ui.other_owner_name(),employee_other_owner_ssn:window.ui.other_owner_ssn(),spouse_owner:window.ui.spouse_policy_owner(),spouse_other_owner_name:window.ui.spouse_other_owner_name(),spouse_other_owner_ssn:window.ui.spouse_other_owner_ssn(),employee_beneficiary:window.ui.employee_beneficiary_type(),spouse_beneficiary:window.ui.spouse_beneficiary_type(),employee_contingent_beneficiary_type:window.ui.employee_contingent_beneficiary_type(),employee_contingent_beneficiary:window.ui.employee_contingent_beneficiary().serialize(),employee_beneficiary_name:window.ui.employee_other_beneficiary().name(),employee_beneficiary_relationship:window.ui.employee_other_beneficiary().relationship(),employee_beneficiary_ssn:window.ui.employee_other_beneficiary().ssn(),employee_beneficiary_dob:window.ui.employee_other_beneficiary().date_of_birth(),spouse_beneficiary_name:window.ui.spouse_other_beneficiary().name(),spouse_beneficiary_relationship:window.ui.spouse_other_beneficiary().relationship(),spouse_beneficiary_ssn:window.ui.spouse_other_beneficiary().ssn(),spouse_beneficiary_dob:window.ui.spouse_other_beneficiary().date_of_birth(),spouse_contingent_beneficiary_type:window.ui.spouse_contingent_beneficiary_type(),spouse_contingent_beneficiary:window.ui.spouse_contingent_beneficiary().serialize()};if(!window.ui.should_include_spouse_in_table()){wizard_results.employee_beneficiary="other";}
wizard_results['children']=[];wizard_results['child_coverages']=[];$.each(window.ui.get_valid_children(),function(){var child=this;wizard_results['children'].push(this.serialize_data());var coverage=window.ui.selected_plan().children_recommendation().recommended_benefit;wizard_results['child_coverages'].push(coverage.serialize_data());});var emp_benefit=window.ui.selected_plan().employee_recommendation().recommended_benefit;if(emp_benefit.is_valid()){wizard_results['employee_coverage']=emp_benefit.serialize_data();}else{wizard_results['employee_coverage']=""}
var sp_benefit=window.ui.selected_plan().spouse_recommendation().recommended_benefit;if(sp_benefit.is_valid()){wizard_results['spouse_coverage']=sp_benefit.serialize_data();}else{wizard_results['spouse_coverage']=""}
wizard_results['product_data']=ui.insurance_product.product_data;delete wizard_results['product_data']['replacement_paragraphs'];wizard_results.replacement_read_aloud=ui.replacement_read_aloud();wizard_results.replacement_is_terminating=ui.replacement_is_terminating();wizard_results.replacement_using_funds=ui.replacement_using_funds();wizard_results.replacement_policies=_.invoke(ui.replacement_policies(),"serialize");ajax_post("/submit-wizard-data",{"wizard_results":wizard_results},function(resp){if(resp.error){bootbox.dialog({message:"There was a problem generating the application form ("+resp.error+").  Please contact the enrollment system administrator.",buttons:{"success":{"label":"OK","className":"btn-sm btn-primary"}}});}else{location=resp.redirect}},handle_remote_error,true);bootbox.dialog({message:"Generating application form for signature, please wait...",buttons:{"success":{"label":"Close","className":"btn-sm btn-primary"}}});}
function submit_decline(){var wizard_results={agent_data:window.ui.defaults,enrollCity:window.ui.enrollCity(),enrollState:window.ui.enrollState,product_type:window.ui.insurance_product.product_type,method:(ui.is_in_person_application())?'in_person':'self_enroll_email',did_decline:ui.did_decline(),employee:window.ui.employee().serialize_data(),spouse:window.ui.spouse().serialize_data()};wizard_results['children']=[];$.each(window.ui.get_valid_children(),function(){var child=this;wizard_results['children'].push(this.serialize_data());});wizard_results['product_data']=ui.insurance_product.product_data;ajax_post("/submit-wizard-data",{"wizard_results":wizard_results},function(resp){if(resp.error){bootbox.dialog({message:"There was a problem submitting the form ("+resp.error+").  Please contact the enrollment system administrator.",buttons:{"success":{"label":"OK","className":"btn-sm btn-primary"}}});}else{location=resp.redirect;}},handle_remote_error,true);}
$.mask.definitions['~']='[+-]';$('#phone').mask('(999) 999-9999');$('#eeDOB').mask('99/99/1999');$('.input-mask-date').mask('99/99/9999');$('.input-mask-ssn').mask('999-99-9999');$('.input-mask-zip').mask('99999');jQuery.validator.addMethod("phone",function(value,element){return this.optional(element)||/^\(\d{3}\) \d{3}\-\d{4}( x\d{1,6})?$/.test(value);},"Enter a valid phone number.");var step_2_validator=$('#questions-form').validate({errorElement:'div',errorClass:'help-block',focusInvalid:false,rules:{replacement_read_aloud:{required:{depends:function(){return ui.is_replacement_form_required();}}},replacement_is_terminating:{required:{depends:function(){return ui.is_replacement_form_required();}}},replacement_using_funds:{required:{depends:function(){return ui.is_replacement_form_required();}}}},highlight:wizard_validate_highlight,success:wizard_validate_success,errorPlacement:wizard_error_placement});$.validator.addClassRules("replacement-question",{required:{depends:function(){return ui.is_replacement_form_required();}}});$.validator.addClassRules("replacement-details-input",{required:{depends:function(){return ui.should_show_replacement_details_form();}}});$('#step3-form').validate({errorElement:'div',errorClass:'help-block',focusInvalid:false,rules:{email:{email:true,required:{depends:function(){return ui.is_self_enroll();}}},eeFName2:{required:true},eeLName2:{required:true},eeGender:{required:true},eessn:{required:true},eeStreet1:{required:true},eeCity:{required:true},eeState:{required:true},eeZip:{required:true},eeOwner:{required:true},eeOtherOwnerName:{required:{depends:function(element){return($("#eeOwner-other").is(':checked'))}}},eeOtherOwnerSSN:{required:{depends:function(element){return($("#eeOwner-other").is(':checked'))}}}},messages:{email:{email:"Please provide a valid email."},eeFName2:"required",eeLName2:"required",eeGender:"Please choose gender",eessn:"required",eeStreet1:"required",eeCity:"required",eeState:"required",eeZip:"required",eeOwner:"Please confirm policy owner",eeOtherOwnerName:"required",eeOtherOwnerSSN:"required"},highlight:wizard_validate_highlight,success:wizard_validate_success,errorPlacement:wizard_error_placement});$('#step4-form').validate({errorElement:'div',errorClass:'help-block',focusInvalid:false,rules:{spFName2:{required:true},spLName2:{required:true},spGender:{required:true},spssn:{required:{depends:function(element){return($("#spOwner-self").is(':checked'))}}},spOwner:{required:true},spOtherOwnerName:{required:{depends:function(element){return($("#spOwner-other").is(':checked'))}}},spOtherOwnerSSN:{required:{depends:function(element){return($("#spOwner-other").is(':checked'))}}}},messages:{spFName2:"required",spLName2:"required",spGender:"Please choose gender",spssn:"Spouse SSN required",spOwner:"Please confirm policy owner",spOtherOwnerName:"required",spOtherOwnerSSN:"required"},highlight:wizard_validate_highlight,success:wizard_validate_success,errorPlacement:wizard_error_placement});$('#step5-form').validate({errorElement:'div',errorClass:'help-block',focusInvalid:false,rules:{eeBeneOtherName:{required:{depends:ui.is_employee_beneficiary_info_required}},eeBeneOtherRelation:{required:{depends:ui.is_employee_beneficiary_info_required}},eeContBeneOtherName:{required:{depends:function(element){return(ui.insurance_product.should_show_contingent_beneficiary()&&window.ui.employee_contingent_beneficiary_type()==="other")}}},eeContBeneOtherRelation:{required:{depends:function(element){return(ui.insurance_product.should_show_contingent_beneficiary()&&window.ui.employee_contingent_beneficiary_type()==="other")}}},spBeneOtherName:{required:{depends:function(element){return(window.ui.did_select_spouse_coverage()&&$("#spBeneOther").is(':checked'))}}},spBeneOtherRelation:{required:{depends:function(element){return(window.ui.did_select_spouse_coverage()&&$("#spBeneOther").is(':checked'))}}},spContBeneOtherName:{required:{depends:function(element){return(ui.insurance_product.should_show_contingent_beneficiary()&&ui.did_select_spouse_coverage()&&ui.spouse_contingent_beneficiary_type()==="other");}}},spContBeneOtherRelation:{required:{depends:function(element){return(ui.insurance_product.should_show_contingent_beneficiary()&&ui.did_select_spouse_coverage()&&ui.spouse_contingent_beneficiary_type()==="other");}}},},messages:{eeBeneOtherName:"required",eeBeneOtherRelation:"required",spBeneOtherName:"required",eeContBeneOtherName:"required",eeContBeneOtherRelation:"required",spBeneOtherRelation:"required",spContBeneOtherName:"required",spContBeneOtherRelation:"required"},highlight:wizard_validate_highlight,success:wizard_validate_success,errorPlacement:wizard_error_placement});$('#step6-form').validate({errorElement:'div',errorClass:'help-block',focusInvalid:false,rules:{confirmDisclaimer:{required:true},enrollCity:{required:true},tokenType:{required:true},ConfirmationToken:{required:true}},messages:{confirmDisclaimer:"please acknowledge that you have received the notice",enrollCity:"required",tokenType:"required",ConfirmationToken:"required"},highlight:wizard_validate_highlight,success:wizard_validate_success,errorPlacement:wizard_error_placement});}
function wizard_validate_highlight(e){$(e).closest('.form-group').removeClass('has-info').addClass('has-error');}
function wizard_validate_success(e){$(e).closest('.form-group').removeClass('has-error').addClass('has-info');$(e).remove();}
function wizard_error_placement(error,element){if(element.is(':checkbox')||element.is(':radio')){var controls=element.closest('div[class*="col-"]');if(controls.find(':checkbox,:radio').length>1)controls.append(error);else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));}
else if(element.is('.select2')){error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));}
else if(element.is('.chosen-select')){error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));}else if(element.closest('.form-group').length>0){error.appendTo(element.closest('.form-group'));}
else error.insertAfter(element);}
function ReplacementPolicy(){var self=this;self.name=ko.observable('');self.policy_number=ko.observable('');self.insured=ko.observable('');self.replaced_or_financing=ko.observable(null);self.replacement_reason=ko.observable("");self.serialize=function(){return{name:self.name(),policy_number:self.policy_number(),insured:self.insured(),replaced_or_financing:self.replaced_or_financing(),replacement_reason:self.replacement_reason()};};}
ko.bindingHandlers.wysiwyg=(function(){this.toolbars={simple:['bold','italic','underline',null,'createLink','unlink',null,null,null,'undo','redo'],full:[{name:'font',title:'Change the font',values:['Times New Roman','Arial','Verdana','Open Sans','Tahoma']},null,{name:'fontSize',title:'Change the font size',values:{1:'Small',3:'Normal',5:'Huge'}},null,'bold','italic','strikethrough','underline',null,'insertunorderedlist','insertorderedlist',null,'outdent','indent',null,'justifyleft','justifycenter','justifyright','justifyfull',null,{name:'createLink',placeholder:'URL',button_class:'btn-purple',button_text:'Add'},'unlink',{name:'createLink',placeholder:'Image URL',button_insert_class:'btn-purple',button_insert:'Add',choose_file:true,button_class:'btn-success',button_text:'Choose an Image'},null,'foreColor',null,'undo','redo']};return{init:function wysiwyg_init(element,valueAccessor,allBindings,viewModel,bindingContext){var va=valueAccessor();var html=va.value,type=va.type;var toolbar=this.toolbars[type]||this.toolbars.simple;$(element).ace_wysiwyg({toolbar:toolbar});$(element).html(html());$(element).on("change",function(){html($(element).html());});},update:function wysiwyg_update(element,valueAccessor,allBindings,viewModel,bindingContext){var va=valueAccessor();var html=va.value,type=va.type;$(element).html(html());}};})();function send_form_data(method,url,data,on_success,on_error){return submit_data(method,url,data,true,on_success,on_error);}
function send_file_data(method,url,data,on_success,on_error){return submit_data(method,url,data,false,on_success,on_error,false);}
function send_json_data(method,url,data,on_success,on_error){return submit_data(method,url,JSON.stringify(data),false,on_success,on_error,'application/json');}
function get_loading_html(message){var text=message||"Loading data...";return'<div class="text-center">'+"<h4>"+text+"</h4>"+'<i class="icon-spinner icon-spin grey bigger-200"></i>'+"</div>";}
function format_enrollment_status_text(status){if(status==="enrolled"){return"Enrolled";}else if(status==="declined"){return"Declined";}else{return"Not Enrolled";}}
function format_enrollment_status_html(status){var status_text=format_enrollment_status_text(status);if(status_text==="Not Enrolled"){return status_text;}else{if(status_text==="Enrolled"){return"<span class='enroll-status ace-icon glyphicon glyphicon-ok'> </span><span class='enroll-status'> Enrolled</span>";}else{return"<span class='ace-icon glyphicon glyphicon-remove error'></span> <span class='enroll-status declined'> Declined</span>";}}}
function parse_date(date_str,format_str){if(format_str===undefined){format_str=["YYYY-MM-DD","MM/DD/YYYY"];}
return moment(date_str,format_str);}
function normalize_date(date_str){if(date_str!=''&&is_valid_date(date_str)){return format_date(parse_date(date_str));}else{return'';}}
function is_valid_date(date_str,format_str){var date=parse_date(date_str,format_str);return date.isValid();}
function format_date(moment_date){return moment_date.format("MM/DD/YYYY");}
function now(){return moment();}
function get_responsive_datatables_breakpoints(){return[{name:'breakI',width:Infinity},{name:'breakII',width:1024},{name:'breakIII',width:768},{name:'breakIV',width:600},{name:'breakV',width:560},{name:'smallphone',width:480}];}
function submit_data(method,url,data,should_process_data,on_success,on_error,contentType){on_success=on_success||function(){};on_error=on_error||function(){};var options={url:url,type:method,data:data,dataType:'json',success:function(results){on_success(results);},error:function(xhr){on_error(xhr);}};if(!should_process_data){options.processData=false;}
if(contentType!==undefined){options.contentType=contentType;}
return $.ajax(options);}
function submit_to_url(url,data){var form=document.createElement('form');for(k in data){if(data.hasOwnProperty(k)){$("<input>",{name:k,value:data[k]}).appendTo(form);}}
form.method="POST";form.action=url;var wrapper=$("<div>");wrapper.appendTo("body").hide();$(form).appendTo(wrapper).submit();}
function show_all_errors(all_errors){if(Object.keys(all_errors).length==0){return;}
$(".submit-message").addClass("error").html("Please fix the indicated problems and resubmit.").show();$.each(all_errors,function(field_name,errors){show_errors(field_name,errors);});focus_first_error(all_errors);}
function show_errors(field_name,field_error_messages){get_field(field_name).after($("<div>").addClass("error").html(field_error_messages.join("<br>")));}
function get_field(field_name){return $("textarea[name="+field_name+"], select[name="+field_name+"], input[name="+field_name+"], #"+field_name);}
function focus_first_error(errors){$.each(errors,function(field_name,errors){get_field(field_name).focus();})}
function hide_all_errors(){$(".submit-message").removeClass("error").hide();$(".error").remove();}
function numberWithCommas(x){return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",");}
ko.bindingHandlers.modal={update:function(element,valueAccessor){if(ko.unwrap(valueAccessor())){$(element).modal('show');}else{$(element).modal('hide');}}};ko.bindingHandlers.flashMessage={update:function(element,valueAccessor){$(element).html(ko.unwrap(valueAccessor())).delay(5000).hide('fade')}};ko.bindingHandlers.maskedInput={init:function(element,valueAccessor){$(element).mask(ko.unwrap(valueAccessor()));}};ko.bindingHandlers.slideDownIf={init:function(element,value_accessor){var val=ko.unwrap(value_accessor());$(element).toggle(val);},update:function(element,value_accessor){var val=ko.unwrap(value_accessor());if(val){$(element).slideDown(400);}else{$(element).slideUp(400);}}};ko.bindingHandlers.fadeInIf={init:function(element,value_accessor){var val=ko.unwrap(value_accessor());$(element).toggle(val);},update:function(element,value_accessor){var val=ko.unwrap(value_accessor());if(val){$(element).fadeIn(400);}else{$(element).fadeOut(400);}}};ko.bindingHandlers.multiSelect={init:function(element,valueAccessor,allBindings,viewModel){valueAccessor().observed();$(element).multiselect(valueAccessor().options);},update:function(element,valueAccessor,allBindings,viewModel){$(element).multiselect('refresh');}};ko.bindingHandlers.dualListbox={init:function(element,valueAccessor){valueAccessor().observed();$(element).bootstrapDualListbox(valueAccessor().options);},update:function(element,valueAccessor){$(element).bootstrapDualListbox("refresh");}};ko.bindingHandlers.uniqueNameValidation={init:function(element,valueAccessor,allBindings,viewModel,bindingContext){var value=valueAccessor();var remoteInvocation=value.remoteMethod;var tracked_observable=value.uniqueObservable;tracked_observable.has_been_checked=ko.observable(false);tracked_observable.is_checking=ko.observable(false);tracked_observable.is_unique=ko.observable(null);tracked_observable.subscribe(function(current_value){tracked_observable.is_checking(true);tracked_observable.has_been_checked(false);remoteInvocation(current_value,function(is_unique){tracked_observable.is_unique(is_unique);tracked_observable.is_checking(false);tracked_observable.has_been_checked(true);});});}};$(function(){$('body').on('focus','[contenteditable]',function(){var $this=$(this);$this.data('before',$this.html());return $this;}).on('blur keyup paste input','[contenteditable]',function(){var $this=$(this);if($this.data('before')!==$this.html()){$this.data('before',$this.html());$this.trigger('change');}
return $this;});});var FlashMessages=function(){var self=this;self.messages=ko.observableArray();self.clear=function(){_.invoke(self.messages(),"dismiss");};self.flash_error=function(message){self.messages.push(new FlashMessage({message:message,type:"error"}));};self.flash_success=function(message){self.messages.push(new FlashMessage({message:message,type:"success"}));};};var FlashMessage=function(message_obj){var self=this;self.message=message_obj.message;self.type=message_obj.type;self.is_visible=ko.observable(true);self.is_error=function(){return self.type==="error";};self.is_success=function(){return self.type==="success";};self.dismiss=function(){self.is_visible(false);}};ko.components.register('flash-messages',{viewModel:function(params){var self=this;self.flash_messages=params.messages;},template:'\
  <!--ko foreach: flash_messages.messages-->\
  <div class="alert alert-block" \
  data-bind="visible: is_visible, \
  css: {\'alert-success\': is_success(), \'alert-danger\': is_error()}">\
  <button type="button" class="close" data-bind="click: dismiss">\
  <i class="ace-icon fa fa-times"></i>\
  </button>\
  \
  <p>\
  <strong data-bind="visible: is_success()">\
  <i class="ace-icon fa fa-check"></i>\
  </strong>\
  \
  <strong data-bind="visible: is_error()">\
  <i class="ace-icon fa fa-exclamation-triangle"></i>\
  </strong>\
  <span data-bind="html: message"></span>\
  </p>\
  </div>\
  <!--/ko-->'});ko.components.register('loading-modal',{viewModel:function(params){var self=this;self.options=params.options;self.defaults={message:"Loading...",title:"Please Wait"};self._current_settings=ko.pureComputed(function(){return $.extend({},self.defaults,self.options()||{});});self.message=ko.pureComputed(function(){return self._current_settings().message;});self.title=ko.pureComputed(function(){return self._current_settings().title;});self.is_showing=ko.pureComputed(function(){return self.options()!==null;});},template:'\
  <div class="modal fade" data-bind="modal: is_showing">\
  <div class="modal-dialog">\
  <div class="modal-content">\
  <div class="modal-header">\
  <button type="button" class="close" data-dismiss="modal"><span\
  aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>\
  <h4 class="modal-title" data-bind="html: title">Please wait</h4>\
  </div>\
  <div class="modal-body">\
  <div class="form-panel modal-panel">\
  <div class="text-center">\
  <h4 data-bind="html: message"></h4>\
  <i class="icon-spinner icon-spin grey bigger-200"></i>\
  </div>\
  </div>\
  </div>\
  <div class="modal-footer">\
  </div>\
  </div>\
  <!-- /.modal-content -->\
  </div>\
  <!-- /.modal-dialog -->\
  </div>\
  '});ko.components.register('height-select',{viewModel:function(params){var self=this;self.height=params.value;self.required=params.required||false;self.name_suffix=params.name_suffix||null;self.height_feet_part=ko.observable(get_feet_part(self.height()));self.height_inches_part=ko.observable(get_inches_part(self.height()));self.update_height=function(){var feet=parseInt(self.height_feet_part());var inches=parseInt(self.height_inches_part());if(feet===null||inches===null){self.height(null);}else{self.height((12*feet)+inches);}};self.height_feet_part.subscribe(self.update_height);self.height_inches_part.subscribe(self.update_height);},template:'\
  <label>\
  Height:\
  <select data-bind="value: height_feet_part, attr: {name: \'height_feet_\'+name_suffix}">\
  <option></option>\
  <option>4</option>\
  <option>5</option>\
  <option>6</option>\
  </select> Feet\
  </label>\
  <label>\
  <select data-bind="value: height_inches_part, attr: {name: \'height_inches_\'+name_suffix}">\
  <option></option>\
  <option>0</option>\
  <option>1</option>\
  <option>2</option>\
  <option>3</option>\
  <option>4</option>\
  <option>5</option>\
  <option>6</option>\
  <option>7</option>\
  <option>8</option>\
  <option>9</option>\
  <option>10</option>\
  <option>11</option>\
  </select> Inches\
  </label>'});function get_feet_part(val){if(val===null||val===undefined){return null;}else{return Math.floor(parseInt(val)/12);}}
function get_inches_part(val){if(val===null||val===undefined){return null;}else{return Math.floor(parseInt(val)%12);}}
ko.components.register('limited-state-select',{viewModel:function(params){this.limiter=params.limiter;this.is_disabled=ko.observable(params.disabled||false);},template:'<select name="enrollmentState" id="enrollmentState" data-bind="\
  value: limiter.selected_state,\
  options: limiter.available_states,\
  optionsCaption: \'(Select State)\',\
  optionsText: \'statecode\',\
  optionsAfterRender: limiter.disable_state_option_if_invalid,\
  disable: is_disabled\
  "></select>'});ko.components.register('limited-product-select',{viewModel:function(params){this.limiter=params.limiter;this.is_disabled=ko.observable(params.disabled||false);},template:'<select name="productID" id="productID" data-bind="\
  value: limiter.selected_product, \
  options: limiter.available_products,\
  optionsText: \'name\', \
  optionsCaption: \'(Select Product)\', \
  optionsAfterRender: limiter.disable_product_option_if_invalid,\
  disable: is_disabled\
  "> \
  </select>'});var ProductStatesLimiterViewModel=function(product_statecode_mapping,selected_state,available_states,selected_products,available_products){var self=this;self.product_state_mapping=map_states_to_products_from_statecode_map(available_states,product_statecode_mapping);self.selected_state=selected_state;self.available_states=available_states;self.selected_products=selected_products;self.available_products=available_products;self.selected_product=ko.computed({read:function(){if(self.selected_products().length>0){return self.selected_products()[0];}else{return null;}},write:function(val){if(val){self.selected_products([val]);}else{self.selected_products([]);}},owner:self});self.is_valid_product_for_state=function(product,state){return _.contains(self.product_state_mapping[product.id],state);};self.is_state_disabled=function(state){return!_.contains(self.enabled_states(),state);};self.is_product_disabled=function(product){return!_.contains(self.enabled_products(),product);};self.disable_product_option_if_invalid=function(option,product){if(product===undefined){return;}
ko.applyBindingsToNode(option,{disable:ko.computed(function(){return self.is_product_disabled(product);})},product);};self.disable_state_option_if_invalid=function(option,state){if(state===undefined){return;}
ko.applyBindingsToNode(option,{disable:ko.computed(function(){return self.is_state_disabled(state);})},state);};self.enabled_states=ko.computed(function(){return _.filter(self.available_states,function(state){return _.all(self.selected_products(),function(product){return self.is_valid_product_for_state(product,state);});});});self.enabled_products=ko.computed(function(){if(self.selected_state()!==null&&self.selected_state()){return _.filter(self.available_products(),function(product){return self.is_valid_product_for_state(product,self.selected_state());});}
return self.available_products();});};function map_states_to_products_from_statecode_map(available_states,product_state_mapping){var states_for_products={};_.each(product_state_mapping,function(statecodes,product_id){states_for_products[product_id]=[];_.each(statecodes,function(statecode){var matched_state=_.find(available_states,function(s){return s.statecode==statecode;});if(matched_state){states_for_products[product_id].push(matched_state);}});});return states_for_products;}
var StatesLimiterViewModel=function(product_statecode_mapping,selected_state,available_states,selected_products){var self=this;self.available_states=available_states;self.selected_state=selected_state;self.product_state_mapping=map_states_to_products_from_statecode_map(available_states,product_statecode_mapping);self.is_valid_product_for_state=function(product,state){return _.contains(self.product_state_mapping[product.id],state);};self.is_state_disabled=function(state){return!_.contains(self.enabled_states(),state);};self.disable_state_option_if_invalid=function(option,state){if(state===undefined){return;}
ko.applyBindingsToNode(option,{disable:ko.computed(function(){return self.is_state_disabled(state);})},state);};self.enabled_states=ko.computed(function(){return _.filter(self.available_states,function(state){return _.all(selected_products(),function(product){return self.is_valid_product_for_state(product,state);});});});selected_products.subscribe(function(products){if(!_.any(products,function(product){return self.is_valid_product_for_state(product,self.selected_state());})){self.selected_state(null);}});};