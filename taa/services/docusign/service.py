from datetime import datetime

import StringIO
import base64
import json
from itertools import ifilter

import requests
from PyPDF2 import PdfFileReader
from collections import defaultdict
from decimal import Decimal
from io import BytesIO
from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate
from urlparse import urljoin
from dateutil.parser import parse as parse_datetime
from taa.services.users import UserService

from taa import app, db
from taa.services.enrollments import EnrollmentApplicationCoverage, EnrollmentApplication
from taa.services.agents import AgentService
from taa.services import RequiredFeature, LookupService
from taa.services.docusign.docusign_envelope import EnrollmentDataWrap, build_callback_url


class DocuSignService(object):
    product_service = RequiredFeature('ProductService')

    def create_multiproduct_envelope(self, product_submissions, census_record, case):
        # Use the first product to get employee and agent data
        first_product_data = EnrollmentDataWrap(product_submissions[0], census_record, case)
        in_person_signer, recipients = self.create_envelope_recipients(case, first_product_data)

        # Create and combine components of the envelope from each product.
        components = []
        for product_submission in product_submissions:
            # Wrap the submission with an object that knows how to pull out key info.
            enrollment_data = EnrollmentDataWrap(product_submission, census_record, case)

            # Don't use docusign rendering of form if we need to adjust the recipient routing/roles.
            should_use_docusign_renderer = False if enrollment_data.should_use_call_center_workflow() else True

            product_id = product_submission['product_id']
            product = self.product_service.get(product_id)
            if product.is_fpp():
                components += self.create_fpp_envelope_components(enrollment_data, recipients,
                                                                  should_use_docusign_renderer)
            else:
                components += self.create_group_ci_envelope_components(enrollment_data, recipients,
                                                                       should_use_docusign_renderer)

        signer_name = first_product_data.get_employee_name() if not enrollment_data.should_use_call_center_workflow() else recipients[0].name
        envelope_result = self.create_envelope(
            email_subject="Signature needed: {} ({})".format(
                #first_product_data.get_product().name,
                signer_name,
                first_product_data.get_employer_name()),
            components=components,
        )
        return in_person_signer, envelope_result

    def create_fpp_envelope(self, enrollment_data, case):
        in_person_signer, recipients = self.create_envelope_recipients(case, enrollment_data)
        # Don't use docusign rendering of form if we need to adjust the recipient routing/roles.
        should_use_docusign_renderer = False if enrollment_data.should_use_call_center_workflow() else True
        components = self.create_fpp_envelope_components(enrollment_data, recipients, should_use_docusign_renderer)
        envelope_result = self.create_envelope(
            email_subject="Signature needed: {} for {} ({})".format(
                enrollment_data.get_product().name,
                enrollment_data.get_employee_name(),
                enrollment_data.get_employer_name()),
            components=components,
        )
        return in_person_signer, envelope_result

    def create_envelope(self, email_subject, components):
        docusign_transport = get_docusign_transport()
        data = {
            "accountID": docusign_transport.api_account_id,
            "status": "sent",
            "emailSubject": email_subject,
            "compositeTemplates": [
                component.generate_composite_template() for component in components],
        }

        result = docusign_transport.post("envelopes", data)

        return DocusignEnvelope(result['uri'])

    def create_envelope_recipients(self, case, enrollment_data):

        signing_agent = enrollment_data.get_signing_agent()

        agent = AgentDocuSignRecipient(signing_agent, name=signing_agent.name(),
                                       email=signing_agent.email)
        employee = EmployeeDocuSignRecipient(name=enrollment_data.get_employee_name(),
                                             email=enrollment_data.get_employee_email())

        if enrollment_data.should_use_call_center_workflow():
            recipients = [agent]
            return agent, recipients
        else:
            recipients = [
                agent,
                employee,
            ]
            return employee, recipients

    def create_fpp_envelope_components(self, enrollment_data, recipients, should_use_docusign_renderer):
        from taa.services.docusign.templates.fpp import FPPTemplate
        from taa.services.docusign.templates.fpp_replacement import FPPReplacementFormTemplate
        from taa.services.docusign.templates.fpp_bank_draft import FPPBankDraftFormTemplate
        from taa.services.docusign.documents.additional_children import ChildAttachmentForm
        from taa.services.docusign.documents.multiple_beneficiaries_attachment import MultipleBeneficiariesAttachment
        from taa.services.docusign.documents.additional_replacement_policies import AdditionalReplacementPoliciesForm

        # Build the components (different PDFs) needed for signing
        components = []

        # Main form
        fpp_form = FPPTemplate(recipients, enrollment_data, should_use_docusign_renderer)
        components.append(fpp_form)

        # Additional Children
        if fpp_form.is_child_attachment_form_needed():
            child_attachment_form = ChildAttachmentForm(recipients, enrollment_data)
            for i, child in enumerate(fpp_form.get_attachment_children()):
                # The indexing starts with the 3rd child.
                child_index = i + 2
                child_data = enrollment_data['child_coverages'][child_index]
                child.update(dict(
                    coverage=format(Decimal(unicode(child_data['face_value'])), ',.0f'),
                    premium=format(Decimal(unicode(child_data['premium'])), '.2f'),
                    soh_questions=enrollment_data['children_soh_questions'][child_index],
                ))
                child_attachment_form.add_child(child)
            components.append(child_attachment_form)

        # Percentage/Multiple beneficiaries
        if fpp_form.is_beneficiary_attachment_needed():
            components.append(MultipleBeneficiariesAttachment(recipients, enrollment_data))

        # Replacement Form
        if fpp_form.is_replacement_form_needed():
            replacement_form = FPPReplacementFormTemplate(recipients,
                                                          enrollment_data,
                                                          should_use_docusign_renderer)
            components.append(replacement_form)

        # Additional replacement policies form
        if fpp_form.is_additional_replacement_policy_attachment_needed():
            components.append(AdditionalReplacementPoliciesForm(recipients,
                                                                enrollment_data))

        # The second part of this statement is meant to restrict this form
        # from showing up when importing enrollments until we implement
        # collecting the Bank Draft data.
        if fpp_form.should_include_bank_draft() and not enrollment_data.is_import():
            components.append(FPPBankDraftFormTemplate(recipients, enrollment_data, should_use_docusign_renderer))

        return components

    def create_group_ci_envelope_components(self, enrollment_data, recipients, should_use_docusign_renderer):
        from taa.services.docusign.templates.group_ci import GroupCITemplate
        from taa.services.docusign.templates.fpp_bank_draft import FPPBankDraftFormTemplate
        from taa.services.docusign.documents.additional_children import ChildAttachmentForm

        # Build the components (different PDFs) needed for signing
        components = []

        # Main form
        form = GroupCITemplate(recipients, enrollment_data, should_use_docusign_renderer)
        components.append(form)

        # Additional Children
        if form.is_child_attachment_form_needed():
            child_attachment_form = ChildAttachmentForm(recipients, enrollment_data, starting_child_num=5)
            for i, child in enumerate(form.get_attachment_children()):
                # The indexing starts with the 3rd child.
                child_index = i + form.num_children_on_form()
                child_data = enrollment_data['child_coverages'][child_index]
                child.update(dict(
                    coverage=format(Decimal(unicode(child_data['face_value'])), ',.0f'),
                    premium=format(Decimal(unicode(child_data['premium'])), '.2f'),
                    soh_questions=enrollment_data['children_soh_questions'][child_index],
                ))
                child_attachment_form.add_child(child)
            components.append(child_attachment_form)

        # The second part of this statement is meant to restrict this form
        # from showing up when importing enrollments until we implement
        # collecting the Bank Draft data.
        if form.should_include_bank_draft() and not enrollment_data.is_import():
            components.append(FPPBankDraftFormTemplate(recipients, enrollment_data, should_use_docusign_renderer))

        return components

    def search_envelopes(self, for_user, envelope_status=None):
        enrollment_service = LookupService("EnrollmentApplicationService")

        # Need to get all envelopes that this user is allowed to see.
        agent_service = LookupService("AgentService")
        if agent_service.is_user_agent(for_user):
            # Envelopes that have been created by me.
            agent = agent_service.get_agent_from_user(for_user)

            own_enrollments = enrollment_service.search_enrollments(
                    by_agent_id=agent.id,
                    by_applicant_signing_status=envelope_status,
            )

            # Envelopes for partner agents on cases I own.
            owned_case_ids = [case.id for case in agent.owned_cases]

            partner_enrollments = db.session.query(EnrollmentApplication
                ).filter(db.or_(EnrollmentApplication.agent_id != agent.id,
                             EnrollmentApplication.agent_id == None,
                             )
                ).filter(EnrollmentApplication.case_id.in_(owned_case_ids)
                )
            enrollments = list(own_enrollments) + list(partner_enrollments)

        else:
            # Allow home office and admin to see all for now.
            enrollments = enrollment_service.search_enrollments(
                    by_agent_ids=None,
                    by_applicant_signing_status=envelope_status,
            )

        return [DocusignEnvelope(enrollment.docusign_envelope_id, enrollment)
                for enrollment in enrollments if enrollment.docusign_envelope_id is not None]

    def get_envelope_signing_url(self, for_user, envelope_id):
        "Must be the agent that the envelope was sent to (this user must be the recipient)"
        errors = []

        envelope_url = '/envelopes/%s'%envelope_id

        enrollment_service = LookupService("EnrollmentApplicationService")

        enrollments = enrollment_service.search_enrollments(
            #by_agent_id=agent.id,
            by_envelope_url=envelope_url,
        )
        enrollment_data = enrollments.all()

        if not enrollment_data:
            raise ValueError("No enrollment with envelope id {}".format(envelope_id))
        enrollment_record = enrollment_data[0]

        envelope = DocusignEnvelope(envelope_url, enrollment_record)

        # Build a callback URL for the inbox
        is_ssl = app.config.get('IS_SSL', True)
        hostname = app.config.get('HOSTNAME', '5starenroll.com')
        scheme = 'https://' if is_ssl else 'http://'
        callback_url = ('{scheme}{hostname}/inbox?enrollment={enrollment_id}'.format(
                    scheme=scheme,
                    hostname=hostname,
                    enrollment_id=enrollment_record.id,
        ))

        # First, we update our signing status
        envelope.update_enrollment_status()

        # Now, see if we can view this envelope based on who is logged in and the status.
        agent_service = LookupService("AgentService")

        # If not completed, we kick the user out if not an admin or an agent.
        # TODO: Enforce the permissions better here. Might be easier to pass in enrollment ID,
        #  since the caller should have that, then we just need to check if current user has
        #  permissions on that enrollment record.
        if not envelope.is_completed() and not agent_service.is_user_agent(for_user) and not agent_service.can_manage_all_cases(for_user):
            raise ValueError("No agent record associated with user {}".format(for_user.href))

        # Only envelopes that have been signed by me.
        agent = agent_service.get_agent_from_user(for_user)

        # If this has been voided, we return an error.
        if enrollment_record.application_status == EnrollmentApplication.APPLICATION_STATUS_VOIDED:
            return None, [dict(message="This envelope has been voided, and can no longer be viewed or signed.", reason='voided_envelope')]

        # Does the employee need to sign?
        if envelope.is_employee_sig_pending():
            url = envelope.get_employee_signing_url(callback_url)
        elif envelope.is_agent_sig_pending():
            url = envelope.get_agent_signing_url(callback_url)
        else:
            url = envelope.get_completed_view_url(callback_url)

        return url, errors

def create_envelope(email_subject, components):
    docusign_service = LookupService('DocuSignService')
    return docusign_service.create_envelope(email_subject, components)


def create_envelope_recipients(case, enrollment_data):
    docusign_service = LookupService('DocuSignService')
    return docusign_service.create_envelope_recipients(case, enrollment_data)


def create_fpp_envelope(enrollment_data, case):
    docusign_service = LookupService('DocuSignService')
    return docusign_service.create_fpp_envelope(enrollment_data, case)


def create_fpp_envelope_components(enrollment_data, recipients, should_use_docusign_renderer):
    docusign_service = LookupService('DocuSignService')
    return docusign_service.create_fpp_envelope_components(enrollment_data, recipients, should_use_docusign_renderer)


def create_fpp_envelope_and_fetch_signing_url(enrollment_data, case):
    employee, envelope_result = create_fpp_envelope(enrollment_data, case)
    redirect_url = fetch_signing_url(employee, enrollment_data, envelope_result)

    return False, None, redirect_url


def create_multiproduct_envelope_and_fetch_signing_url(wizard_data, census_record, case):

    docusign_service = LookupService('DocuSignService')
    in_person_signer, envelope_result = docusign_service.create_multiproduct_envelope(wizard_data, census_record, case)

    enrollment_data = EnrollmentDataWrap(wizard_data[0], census_record, case)
    signing_url = fetch_signing_url(in_person_signer, enrollment_data, envelope_result)

    return envelope_result, signing_url


def fetch_signing_url(in_person_signer, enrollment_data, envelope_result):
    redirect_url = envelope_result.get_signing_url(
        in_person_signer,
        callback_url=build_callback_url(
            enrollment_data, enrollment_data.get_session_type()),
        docusign_transport=get_docusign_transport()
    )
    return redirect_url


class DocusignEnvelope(object):
    def __init__(self, uri, enrollment_record=None, fetch_tabs=False):
        self.uri = uri
        self.enrollment_record = enrollment_record
        self.fetch_tabs = fetch_tabs

        self._cached_recipient_status = None
        self._cached_envelope_status = None
        self._cached_envelope_status_changes = None

    def get_envelope_status_changes(self):
        if self._cached_envelope_status_changes:
            return self._cached_envelope_status_changes

        url = '{}/envelopes?envelopeId={}'.format(self.get_account_base_url(), self.get_envelope_id())
        self._cached_envelope_status_changes = get_docusign_transport().get(url)
        return self._cached_envelope_status_changes

    def get_recipient_status(self):
        if self._cached_recipient_status:
            return self._cached_recipient_status

        docusign_transport = get_docusign_transport()
        self._cached_recipient_status = docusign_transport.get(
            "{}/recipients?include_tabs={}".format(self.get_envelope_base_url(), "true" if self.fetch_tabs else "false")
        )
        return self._cached_recipient_status

    def get_envelope_status(self):
        if self._cached_envelope_status:
            return self._cached_envelope_status

        docusign_transport = get_docusign_transport()
        self._cached_envelope_status = docusign_transport.get(self.get_envelope_base_url())
        return self._cached_envelope_status

    def get_signing_url(self, recipient, callback_url, docusign_transport):
        data = dict(
            authenticationMethod="email",
            email=recipient.email,
            returnUrl=callback_url,
            clientUserId=recipient.get_client_user_id(),
            userName=recipient.name,
        )
        view_url = self.get_envelope_base_url() + "/views/recipient"
        result = docusign_transport.post(view_url, data=data)

        return result['url']

    def get_envelope_base_url(self):
        envelope_url = self.get_account_base_url() + self.uri
        return envelope_url

    def get_account_base_url(self):
        url = get_docusign_transport().api_endpoint
        if url.endswith('/'):
            url = url[:-1]
        return url

    def to_json(self):

        if self.enrollment_record.agent_name:
            agent_name = self.enrollment_record.agent_name
        else:
            agent_name = ""

        return dict(
            id=self.get_envelope_id(),
            agent_id=self.enrollment_record.agent_id,
            agent=agent_name,
            employee_signing_status=self.enrollment_record.applicant_signing_status,
            employee_signing_datetime=self.enrollment_record.applicant_signing_datetime,
            agent_signing_datetime=self.enrollment_record.agent_signing_datetime,
            agent_signing_status=self.enrollment_record.agent_signing_status,
            enrollment_record_id=self.enrollment_record.id,
            group=self.enrollment_record.case.company_name,
            timestamp=self.enrollment_record.signature_time,
            employee_first=self.enrollment_record.census_record.employee_first,
            employee_last=self.enrollment_record.census_record.employee_last,
            products=self.get_product_names(),
            coverage=self.get_coverage_summary(),
            case_id=self.enrollment_record.case_id,
            census_record_id=self.enrollment_record.census_record_id,
            application_status=self.enrollment_record.application_status,
        )

    def get_product_names(self):
        return ', '.join(set([coverage.product.name for coverage in self.enrollment_record.coverages]))

    def get_coverage_summary(self):
        ee_cov = None
        sp_cov = None
        ch_cov = None
        for cov in self.enrollment_record.coverages:
            if cov.applicant_type == EnrollmentApplicationCoverage.APPLICANT_TYPE_EMPLOYEE:
                ee_cov = cov.coverage_face_value
            elif cov.applicant_type == EnrollmentApplicationCoverage.APPLICANT_TYPE_SPOUSE:
                sp_cov = cov.coverage_face_value
            elif cov.applicant_type == EnrollmentApplicationCoverage.APPLICANT_TYPE_CHILD:
                ch_cov = cov.coverage_face_value

        def format_coverage_summary(val):
            if not val:
                return "-"
            import locale
            return locale.currency(int(val), grouping=True)

        return '{} / {} / {}'.format(format_coverage_summary(ee_cov), format_coverage_summary(sp_cov), format_coverage_summary(ch_cov))

    def get_envelope_id(self):
        return self.uri.replace("/envelopes/", "")

    def update_enrollment_status(self):
        self.update_application_status()
        self.update_recipient_statuses()

        db.session.commit()

    def update_application_status(self):
        DS_ENV_STATUS_DELETED = "deleted"
        DS_ENV_STATUS_VOIDED = "voided"
        DS_ENV_STATUS_DECLINED = "declined"
        DS_ENV_STATUS_COMPLETED = "completed"
        # These statuses are all "pending" full completion.
        DS_ENV_STATUS_SIGNED = "signed"
        DS_ENV_STATUS_DELIVERED = "delivered"
        DS_ENV_STATUS_SENT = "sent"
        DS_ENV_STATUS_CREATED = "created"

        # Based on the signing status and envelope status
        env_status = self.get_envelope_status()['status']
        if env_status in [DS_ENV_STATUS_VOIDED, DS_ENV_STATUS_DELETED]:
            self.void_enrollment()
        elif env_status in [DS_ENV_STATUS_DECLINED]:
            self.decline_enrollment()
        elif env_status in [DS_ENV_STATUS_COMPLETED]:
            self.complete_enrollment()
        else:
            # Anything else is a pending status
            self.mark_enrollment_pending()

    def void_enrollment(self):
        self.enrollment_record.application_status = EnrollmentApplication.APPLICATION_STATUS_VOIDED

    def decline_enrollment(self):
        self.enrollment_record.application_status = EnrollmentApplication.APPLICATION_STATUS_DECLINED

    def complete_enrollment(self):
        self.enrollment_record.application_status = EnrollmentApplication.APPLICATION_STATUS_ENROLLED

    def mark_enrollment_pending(self):
        if self.is_employee_sig_pending():
            self.enrollment_record.application_status = EnrollmentApplication.APPLICATION_STATUS_PENDING_EMPLOYEE
        else:
            self.enrollment_record.application_status = EnrollmentApplication.APPLICATION_STATUS_PENDING_AGENT

    def update_recipient_statuses(self):

        # Get employee if he is a signer.
        emp_signer = self.get_employee_signing_status()
        if emp_signer:
            if emp_signer['status'] == 'sent' or emp_signer['status'] == 'delivered':
                # Not signed
                self.enrollment_record.applicant_signing_status = EnrollmentApplication.SIGNING_STATUS_PENDING
                self.enrollment_record.applicant_signing_datetime = None

            elif emp_signer.get('signedDateTime'):
                # Employee Signed
                self.enrollment_record.applicant_signing_status = EnrollmentApplication.SIGNING_STATUS_COMPLETE
                self.enrollment_record.applicant_signing_datetime = self.parse_signing_date(
                    emp_signer.get('signedDateTime'))

            elif emp_signer['status'] == 'declined':
                self.enrollment_record.applicant_signing_status = EnrollmentApplication.SIGNING_STATUS_DECLINED
                self.enrollment_record.applicant_signing_datetime = None

            else:
                # All other statuses are some form of pending
                self.enrollment_record.applicant_signing_status = EnrollmentApplication.SIGNING_STATUS_PENDING
                self.enrollment_record.applicant_signing_datetime = None

        else:
            # No employee signer on envelope.
            self.enrollment_record.applicant_signing_status = EnrollmentApplication.SIGNING_STATUS_NA

        agent_signer = self.get_agent_signing_status()
        if agent_signer:
            if agent_signer['status'] == 'sent' or agent_signer['status'] == 'delivered':
                # Not signed
                self.enrollment_record.agent_signing_status = EnrollmentApplication.SIGNING_STATUS_PENDING

            elif agent_signer.get('signedDateTime'):
                # Employee Signed
                self.enrollment_record.agent_signing_status = EnrollmentApplication.SIGNING_STATUS_COMPLETE
                self.enrollment_record.agent_signing_datetime = self.parse_signing_date(
                    agent_signer.get('signedDateTime'))
            elif agent_signer['status'] == 'declined':
                self.enrollment_record.agent_signing_status = EnrollmentApplication.SIGNING_STATUS_DECLINED
                self.enrollment_record.agent_signing_datetime = None



    def parse_signing_date(self, val):
        utc_datetime = parse_datetime(val)

        # Docusign datetimes are UTC and include TZ info. We are storing localtimes for now on the server, so convert it.

        from dateutil.tz import tzlocal
        from datetime import datetime

        # First add the local timezone offset to the UTC date.
        local_utc_offset = datetime.now(tzlocal()).utcoffset()
        local_datetime_with_tz = utc_datetime + local_utc_offset

        # Strip off the timezone info by parsing a format without TZ info.
        #  (We don't want to store the TZ info in the database)
        return parse_datetime(local_datetime_with_tz.strftime("%FT%T"))

    def is_employee_sig_pending(self):
        # First, is employee even a signer?
        employee_signing_status = self.get_employee_signing_status()
        if not employee_signing_status:
            return False

        signed_date_time = employee_signing_status.get('signedDateTime')
        return not bool(signed_date_time)

    def is_agent_sig_pending(self):
        # First, is employee even a signer?
        agent_sig_status = self.get_agent_signing_status()
        if not agent_sig_status:
            return False

        signed_date_time = agent_sig_status.get('signedDateTime')
        return not bool(signed_date_time)

    def get_employee_signing_status(self):
        return self.find_recipient_by_role(self.get_recipient_status(), "Employee")

    def get_agent_signing_status(self):
        return self.find_recipient_by_role(self.get_recipient_status(), "Agent")

    def find_recipient_by_role(self, recipient_status, role_name):
        signers = recipient_status.get('signers', [])
        return next(ifilter(lambda r: r.get('roleName') == role_name, signers), None)

    def get_employee_signing_url(self, callback_url):
        ds_recip = self.get_employee_signing_status()
        #recipient = AgentDocuSignRecipient(agent, agent.name(), agent.email)
        recipient = EmployeeDocuSignRecipient(
            name=ds_recip['name'],
            email=ds_recip['email'],
            role_name="Employee",
        )
        return self.get_signing_url(recipient, callback_url, get_docusign_transport())

    def get_agent_signing_url(self, callback_url):
        ds_recip = self.get_agent_signing_status()
        #recipient = AgentDocuSignRecipient(agent, agent.name(), agent.email)
        #return self.get_signing_url(recipient, callback_url, get_docusign_transport())
        # TODO: should put check here to see if current user is actually agent, or up one level?

        data = dict(
            authenticationMethod="email",
            email=ds_recip['email'],
            returnUrl=callback_url,
            clientUserId=ds_recip['clientUserId'],
            userName=ds_recip['name'],
        )
        view_url = self.get_envelope_base_url() + "/views/recipient"
        result = get_docusign_transport().post(view_url, data=data)

        return result['url']

    def get_completed_view_url(self, callback_url):
        if self.get_employee_signing_status():
            return self.get_employee_signing_url(callback_url)
        else:
            # Return any valid recipient view
            return self.get_agent_signing_url(callback_url)

    def get_completed_pdf(self):
        # Return the raw PDF bytes. The PDF will only have all the data if it is completed.
        transport = get_docusign_transport()
        content = transport.get_binary(self.get_envelope_base_url() + '/documents/combined')
        # Can pull out the filename from the header, but let's not do that for now.
        return content



    def is_completed(self):
        """Basically is it all done, enrolled.
        Might add declined to this to allow viewing declines."""
        return self.enrollment_record.application_status == EnrollmentApplication.APPLICATION_STATUS_ENROLLED


def get_docusign_transport():
    transport_service = LookupService('DocuSignTransport')
    return transport_service(
        app.config['DOCUSIGN_INTEGRATOR_KEY'],
        app.config['DOCUSIGN_API_ACCOUNT_ID'],
        app.config['DOCUSIGN_API_USERNAME'],
        app.config['DOCUSIGN_API_PASSWORD'],
        app.config['DOCUSIGN_API_ENDPOINT'],
    )


class DocuSignTransport(object):
    def __init__(self, integrator_key, api_account_id, api_username, api_password, api_endpoint):

        self.integrator_key = integrator_key
        self.api_account_id = api_account_id
        self.api_username = api_username
        self.api_password = api_password
        self.api_endpoint = api_endpoint

        self.last_request = None

    def get(self, url):
        full_url = urljoin(self.api_endpoint, url)

        self.last_request = req = requests.get(full_url, headers=self._make_headers())

        if req.status_code < 200 or req.status_code >= 300:
            self._raise_docusign_error(None, full_url, req)

        return req.json()

    def get_binary(self, url):
        full_url = urljoin(self.api_endpoint, url)

        self.last_request = req = requests.get(full_url, headers=self._make_headers())

        if req.status_code < 200 or req.status_code >= 300:
            self._raise_docusign_error(None, full_url, req)

        return req.content

    def post(self, url, data):
        full_url = urljoin(self.api_endpoint, url)

        self.last_request = req = requests.post(
            full_url,
            data=json.dumps(data),
            headers=self._make_headers()
        )

        # Useful when we want to get the direct input to docusign for debugging DocuSign errors with requests module.
        #print("posting to docusign: %s"%full_url)
        #print("data: %s"%json.dumps(data))
        #print('headers: %s'%self._make_headers())

        if req.status_code < 200 or req.status_code >= 300:
            self._raise_docusign_error(data, full_url, req)

        return req.json()

    def put(self, url, data):
        full_url = urljoin(self.api_endpoint, url)

        self.last_request = req = requests.put(
            full_url,
            data=json.dumps(data),
            headers=self._make_headers()
        )

        if req.status_code < 200 or req.status_code >= 300:
            self._raise_docusign_error(data, full_url, req)

        return req.json()

    def _raise_docusign_error(self, data, full_url, req):
        # Print error to Heroku error logs.
        print("""
DOCUSIGN ERROR at URL: %s
posted data: %s
status is: %s
response:
%s""" % (full_url, data, req.status_code, req.text))
        raise Exception("Bad DocuSign Request")

    def _make_headers(self):
        return {
            'X-DocuSign-Authentication': "<DocuSignCredentials>" \
                "<Username>" + self.api_username + "</Username>" \
                "<Password>" + self.api_password + "</Password>" \
                "<IntegratorKey>" + self.integrator_key + "</IntegratorKey>" \
                "</DocuSignCredentials>",
            'Accept': 'application/json',
        }


# Envelope Recipient
class DocuSignRecipient(object):
    def __init__(self, name, email, cc_only=False, role_name=None, exclude_from_envelope=False, use_embedded_signing=True):
        self.name = name
        self.email = email
        self.cc_only = cc_only
        self.role_name = role_name
        self._use_embedded_signing = use_embedded_signing
        self._exclude_from_envelope = exclude_from_envelope

    def is_carbon_copy(self):
        return self.cc_only

    def is_agent(self):
        return False

    def is_employee(self):
        return False

    def get_role_name(self):
        if self.is_agent():
            return "Agent"
        elif self.is_employee():
            return "Employee"
        else:
            return self.role_name if self.role_name else "None"

    def is_required(self):
        """
        This corresponds to the TemplateRequired parameter on the API, not entirely sure if this
        needs to be specified anymore.
        """
        return False

    def should_exclude_from_envelope(self):
        return self._exclude_from_envelope

    def should_use_embedded_signing(self):
        return bool(self._use_embedded_signing)

    def get_client_user_id(self):
        raise NotImplementedError()


class EmployeeDocuSignRecipient(DocuSignRecipient):
    def is_employee(self):
        return True

    def is_required(self):
        return True

    def should_use_embedded_signing(self):
        # Always uses embedded signing process.
        return True

    def get_client_user_id(self):
        return "ee-123456"

class AgentDocuSignRecipient(DocuSignRecipient):
    def __init__(self, agent, name, email, cc_only=False, role_name=None, exclude_from_envelope=False,
                 use_embedded_signing=True):

        super(AgentDocuSignRecipient, self).__init__(name, email, cc_only, role_name, exclude_from_envelope,
                                                     use_embedded_signing)
        self.agent = agent

    def is_employee(self):
        return False

    def is_agent(self):
        return True

    def get_client_user_id(self):
        return "123456"
        # Use the stormpath URL for this agent
        agent_service = AgentService()
        # Hash our agent id
        import hashlib
        return hashlib.sha256("agent-{}".format(self.agent.id)).hexdigest()

class CarbonCopyRecipient(DocuSignRecipient):
    def is_employee(self): return False
    def is_agent(self): return False
    def is_carbon_copy(self): return True


# Tabs
class DocuSignTab(object):
    def __init__(self, x=None, y=None, document_id=None, page_number=None, locked=None, required=None,
                 width=None, height=None, tooltip=None):
        self.x = x
        self.y = y
        self.width = width
        self.height = height

        self.document_id = document_id
        self.page_number = page_number
        self.locked = locked
        self.required = required
        self.tooltip = tooltip

    def build_data(self):
        "Base data that applies to all tabs."

        data = {}

        if self.x is not None:
            data['xPosition'] = int(self.x)
        if self.y is not None:
            data['yPosition'] = int(self.y)
        if self.document_id is not None:
            data['documentId'] = self.document_id
        if self.page_number is not None:
            data['pageNumber'] = self.page_number

        if self.width is not None:
            data['width'] = self.width

        if self.height is not None:
            data['height'] = self.height

        if self.locked is not None:
            data['locked'] = self.locked

        if self.required is not None:
            data['required'] = self.required

        if self.tooltip is not None:
            # They call tooltip 'name' for some reason.
            data['name'] = self.tooltip

        return data


class DocuSignRadioTab(DocuSignTab):
    def __init__(self, group_name, value, is_selected=True, x=None, y=None, document_id=None, page_number=None):

        super(DocuSignRadioTab, self).__init__(x, y, document_id, page_number)

        self.group_name = self.name = group_name
        self.value = value
        self.is_selected = is_selected

    def add_to_tabs(self, tabs):
        if 'radioGroupTabs' not in tabs:
            tabs['radioGroupTabs'] = []

        # Find the radio with this group name if it exists
        radio_group = next((tab for tab in tabs['radioGroupTabs'] if tab['groupName'] == self.group_name), None)
        if not radio_group:
            radio_group = dict(groupName=self.group_name, radios=[], documentID=self.document_id)
            tabs['radioGroupTabs'].append(radio_group)

        # Add this radio
        data = self.build_data()
        data.update(dict(
            value=str(self.value),
            selected=bool(self.is_selected),
        ))
        radio_group['radios'].append(data)


class DocuSignTextTab(DocuSignTab):
    def __init__(self, name, value, x=None, y=None, document_id=None, page_number=None, width=None, height=None,
                 is_bold=None, is_italic=None, is_underline=None, font=None, font_size=None, font_color=None,
                 required=None, tooltip=None):

        super(DocuSignTextTab, self).__init__(x, y, document_id, page_number,
                                              width=width, height=height, required=required, tooltip=tooltip)

        self.name = name
        self.value = value

        self.font = font
        self.font_size = font_size
        self.font_color = font_color

        self.is_bold = is_bold
        self.is_underlined = is_underline
        self.is_italic = is_italic

    def add_to_tabs(self, tabs):
        if 'textTabs' not in tabs:
            tabs['textTabs'] = []

        data = self.build_data()
        text_data = dict(
            tabLabel=self.name,
            value=self.value,
        )
        for attr, docu_attr in [
            ('font', 'font'),
            ('font_size', 'fontSize'),
            ('font_color', 'fontColor'),
            ('is_bold', 'bold'),
            ('is_underlined', 'underline'),
            ('is_italic', 'italic'),
            ]:
            if getattr(self, attr) is not None:
                text_data[docu_attr] = getattr(self, attr)

        data.update(text_data)
        tabs['textTabs'].append(data)


class DocuSignPreSignedTextTab(DocuSignTextTab):
    pass


class DocuSignSigTab(DocuSignTab):
    def __init__(self, x, y, document_id, page_number, name=None):

        super(DocuSignSigTab, self).__init__(x, y, document_id, page_number)
        self.name = name if name else "SignHere"

    def add_to_tabs(self, tabs):
        if 'signHereTabs' not in tabs:
            tabs['signHereTabs'] = []

        tabs['signHereTabs'].append(self.build_data())


class DocuSignSigDateTab(DocuSignTab):
    def __init__(self, x, y, document_id, page_number, name=None):

        super(DocuSignSigDateTab, self).__init__(x, y, document_id, page_number)
        self.name = name if name else 'SigDate'

    def add_to_tabs(self, tabs):
        if 'dateSignedTabs' not in tabs:
            tabs['dateSignedTabs'] = []

        tabs['dateSignedTabs'].append(dict(
            xPosition=int(self.x),
            yPosition=int(self.y),
            documentId=self.document_id,
            pageNumber=self.page_number,
        ))

# Envelope Components - basically, some sort of document or template
#
# Base class
class DocuSignEnvelopeComponent(object):

    tab_repository = RequiredFeature('FormTemplateTabRepository')
    pdf_generator_service = RequiredFeature("ImagedFormGeneratorService")

    # Constants used for determining purpose of tab generation.
    PDF_TABS = u'pdf_tabs'
    DOCUSIGN_TABS = u'docusign_tabs'

    def __init__(self, recipients):
        """
        The order of the recipients dictates the DocuSign routing order for now.
        """
        self.recipients = recipients

    def generate_composite_template(self):
        """
        DocuSign uses 'composite templates' to represent more complex combinations of
        server-side templates, custom tabs, and attached documents (inline templates).
        """
        raise NotImplementedError("Override")

    def generate_recipients(self):

        output = defaultdict(list)

        for num, recipient in enumerate(self.recipients):
            if recipient.should_exclude_from_envelope():
                continue

            recip_repr = dict(
                name=recipient.name,
                email=recipient.email,
                recipientId=str(num),
                routingOrder=str(num),
                roleName=recipient.get_role_name(),
                templateRequired=recipient.is_required(),
                tabs=self.generate_docusign_formatted_tabs(recipient),
            )
            if recipient.should_use_embedded_signing():
                # TODO: Generate if needed
                recip_repr['clientUserId'] = recipient.get_client_user_id()

            if self.is_recipient_signer(recipient):
                output["signers"].append(recip_repr)
            else:
                output['carbonCopies'].append(recip_repr)

        return dict(**output)

    def generate_docusign_formatted_tabs(self, recipient):
        # Format tabs for docusign
        ds_tabs = {}
        generated_tabs = self.generate_tabs(recipient, self.DOCUSIGN_TABS)

        # Check to see if we are already returning docusign-formatted tab
        # if isinstance(generated_tabs, dict):
        #     ds_tabs.update(generated_tabs)
        #     return ds_tabs

        for tab in generated_tabs:
            tab.add_to_tabs(ds_tabs)

        return ds_tabs

    def generate_tabs(self, recipient, purpose):
        """Returns list of our own internal tab representation"""

        # Inject any signature and date data that has been passed from the enrollment.
        tabs = []

        # Convert call-center employee signatures to voice-auth statements.
        if purpose == self.PDF_TABS and self.data.should_use_call_center_workflow() and hasattr(self, 'template_id'):
            tab_definitions = self.tab_repository.get_tabs_for_template(self.template_id)
            for tab_def in tab_definitions:
                # The PDF Export code currently expects a name of "{}{}".format(tab_type, recip_type)
                #   In order to match up tab defs to values correctly.
                if tab_def.type_ == "SignHere" and tab_def.recipient_role == "Employee":
                    tabs += [DocuSignTextTab("SignHereEmployee", self.data.get_employee_esignature(),
                                                     x=tab_def.x, y=tab_def.y,
                                                      document_id=1, page_number=tab_def.page,
                                                      )]
                elif tab_def.type_ == "DateSigned" and tab_def.recipient_role == "Employee":
                    tabs.append(DocuSignTextTab("DateSignedEmployee", datetime.today().strftime('%m/%d/%Y'),
                        x=tab_def.x,
                        y=tab_def.y,
                        document_id=1,
                        page_number=tab_def.page,
                    ))


        # This is for enrollment import - replace signatures with text when rendering PDF.
        if self.data.get('emp_sig_txt'):
            tabs += [DocuSignPreSignedTextTab("SignHereEmployee", self.data.get_employee_esignature())]
            tabs += [DocuSignPreSignedTextTab("InitialHereEmployee", self.data.get_employee_initials())]
        if self.data.get('agent_sig_txt'):
            tabs += [DocuSignPreSignedTextTab("SignHereAgent", self.data.get_agent_esignature())]
            tabs += [DocuSignPreSignedTextTab("InitialHereAgent", self.data.get_agent_initials())]

        # Dates
        if self.data.get('application_date') or self.data.get('emp_sig_date'):
            employee_signed_date = self.data.get('application_date') if self.data.get('application_date') else self.data.get('emp_sig_date')
            tabs += [DocuSignPreSignedTextTab("DateSignedEmployee", employee_signed_date)]

        if self.data.get('application_date') or self.data.get('agent_sig_date'):
            agent_signed_date = self.data.get('application_date') if self.data.get('application_date') else self.data.get('agent_sig_date')
            tabs += [
                DocuSignPreSignedTextTab("DateSignedAgent", agent_signed_date),
            ]




        return tabs

    def is_recipient_signer(self, recipient):
        raise NotImplementedError("Override")

    def make_inline_doc_repr(self, num_pages, pdf_base64, recipients):
        return dict(
            document=dict(
                name=self.__class__.__name__,
                sequence="1",
                documentId="1",
                pages=str(num_pages),
                fileExtension="pdf",
                documentBase64=pdf_base64,
            ),
            inlineTemplates=[dict(
                sequence="1",
                recipients=recipients,
            )],
        )


# Server-side template base class.
class DocuSignServerTemplate(DocuSignEnvelopeComponent):


    def __init__(self, template_id, recipients, use_docusign_renderer=True):
        DocuSignEnvelopeComponent.__init__(self, recipients)
        self.template_id = template_id
        self.use_docusign_renderer = use_docusign_renderer

    def generate_composite_template(self):
        if self.use_docusign_renderer:
            return self.generate_server_pdfs()
        else:
            return self.generate_inline_pdfs()

    def generate_server_pdfs(self):
        return {
            "serverTemplates": [
                {
                    "templateId": self.template_id,
                    "sequence": "1",
                },
            ],
            "inlineTemplates": [
                {
                    "sequence": "2",
                    "recipients": self.generate_recipients(),
                }
            ]
        }

    def generate_inline_pdfs(self):
        pdf_bytes = self.generate_pdf_bytes()
        num_pages = self.get_num_pages(pdf_bytes)
        pdf_base64 = base64.standard_b64encode(pdf_bytes)
        return self.make_inline_doc_repr(
            num_pages=num_pages,
            pdf_base64=pdf_base64,
            recipients=self.generate_recipients()
        )

    def generate_pdf_bytes(self):
        tabs = []
        for recipient in self.recipients:
            tabs += self.generate_tabs(recipient, purpose=self.PDF_TABS)
        pdf_bytes = self.pdf_generator_service.generate_form_pdf(
            self.template_id,
            tabs,
        )
        return pdf_bytes

    def get_num_pages(self, pdf_bytes):
        reader = PdfFileReader(BytesIO(pdf_bytes))
        num_pages = reader.getNumPages()
        return num_pages

    def generate_tabs(self, recipient, purpose):
        tabs = super(DocuSignServerTemplate, self).generate_tabs(recipient, purpose)

        # Include all agent tabs if this is call center mode.
        if purpose == self.DOCUSIGN_TABS and self.data.should_use_call_center_workflow():
            # Find the tab definition
            tab_definitions = self.tab_repository.get_tabs_for_template(self.template_id)
            for tab_def in tab_definitions:
                if tab_def.type_ == "SignHere" and tab_def.recipient_role == "Agent":
                    tabs.append(DocuSignSigTab(
                        x=tab_def.x,
                        y=tab_def.y,
                        # Not sure what this is?
                        document_id=1,
                        page_number=tab_def.page,
                    ))
                elif tab_def.type_ == "DateSigned" and tab_def.recipient_role == "Agent":
                    tabs.append(DocuSignSigDateTab(
                        x=tab_def.x,
                        y=tab_def.y,
                        # Not sure if we will need to generate this?
                        document_id=1,
                        page_number=tab_def.page,
                    ))
                # Include all radio button tabs that were not locked, both employee and agent.
                elif tab_def.custom_type == "Radio" and tab_def.custom_tab_locked == False:
                    label = tab_def.label.split('.')[0] if len(tab_def.label.split('.')) > 1 else tab_def.label
                    tabs.append(DocuSignRadioTab(
                        label,
                        is_selected=False,
                        value=tab_def.name,
                        x=tab_def.x,
                        y=tab_def.y,
                        document_id=1,
                        page_number=tab_def.page))

                elif tab_def.custom_type == "Text" and tab_def.custom_tab_locked == False:
                    tabs.append(
                        DocuSignTextTab(
                            # Tab def label is really the name
                            name=tab_def.label,
                            value="",
                            x=tab_def.x,
                            y=tab_def.y,
                            width=tab_def.width,
                            height=tab_def.height,
                            document_id=1,
                            page_number=tab_def.page,
                            required=tab_def.custom_tab_required,
                        ))


        return tabs

    def is_recipient_signer(self, recipient):
        return recipient.is_employee() or recipient.is_agent()




# Custom PDF documents
class BasePDFDoc(DocuSignEnvelopeComponent):

    pdf_generator_service = RequiredFeature("ImagedFormGeneratorService")

    def __init__(self, recipients):
        DocuSignEnvelopeComponent.__init__(self, recipients)

        self.page_width, self.page_height = letter
        self._pdf_data = StringIO.StringIO()
        self._doc = SimpleDocTemplate(self._pdf_data, pagesize=letter)

        # Use this to record the last page before generating document.
        self._num_pages = None

    def get_pdf_bytes(self):
        """
        Generates the PDF and encodes the bytes using base64 encoding.
        """

        # Capture number of pages before saving
        self._num_pages = self._doc.page

        return self._pdf_data.getvalue()

    def generate(self):
        raise NotImplementedError("Override this method to do custom drawing")

    def generate_composite_template(self):

        # Generate the PDF
        pdf_bytes = self.generate_pdf_bytes()

        # Output DocuSign representation
        return self.make_inline_doc_repr(
            num_pages=self.get_num_pages(),
            pdf_base64=base64.standard_b64encode(pdf_bytes),
            recipients=self.generate_recipients()
        )

    def generate_pdf_bytes(self):

        # Do any drawing necessary to create the base PDF
        self.generate()
        pdf_bytes = self.get_pdf_bytes()

        # Add any tabs needed and merge them onto this PDF
        tabs = []
        for r in self.recipients:
            tabs += self.generate_tabs(r, self.PDF_TABS)

        pdf_bytes = self.pdf_generator_service.generate_overlay_pdf_from_tabs(
            tabs,
            # Sig tabs will be auto-generated
            [],
            pdf_bytes,
        )
        return pdf_bytes

    def get_num_pages(self):
        if self._num_pages:
            return self._num_pages
        else:
            # Assume we are still drawing and need the current number of pages.
            return self._doc.page


if __name__ == "__main__":
    # Test drive the code

    # from documents.additional_children import ChildAttachmentForm
    #
    # agent = AgentDocuSignRecipient(name="Test Agent", email="agent@zachmason.com")
    # employee = EmployeeDocuSignRecipient(name="Zach Mason", email="zach@zachmason.com")
    # test_recipients = [
    #     agent,
    #     employee,
    # ]
    #
    # child_attachment_form = ChildAttachmentForm(test_recipients)
    # child_attachment_form.add_child("Joe", "Johnson", child_dob="12/01/2010", child_ssn='123-12-1234', child_soh_answers=[])
    # child_attachment_form.add_child("Susie", "Johnson", child_dob="12/01/2012", child_ssn='123-12-3234', child_soh_answers=[])
    # child_attachment_form.add_child("Christy", "Johnson", child_dob="12/01/2014", child_ssn='223-12-3234', child_soh_answers=[])
    #
    # general_template = DocuSignServerTemplate('666F1F5B-77C6-47CC-AC85-1784B8569C3D', test_recipients)

    transport = get_docusign_transport()
    url = 'https://demo.docusign.net/restapi/v2/accounts/5988eb5b-bee1-4825-a078-dcac445a22ce/envelopes'
    transport.post(url, data={'status': 'sent', 'compositeTemplates': [
        {'document': {'name': 'FPPTemplate',
                     'sequence': '1',
                     'fileExtension': 'pdf',
                     'documentBase64': '',
                     'pages': '2', 'documentId': '1'},
        'inlineTemplates': [{'recipients': {
            'carbonCopies': [{'templateRequired': False,
                              'name': 'Test CC Recipient',
                              'routingOrder': '2',
                              'tabs': {},
                              'roleName': 'None',
                              'recipientId': '2',
                              'email': 'zmason@delmarsd.com'}]},
                             'sequence': '1'}]},
       #  {
       # 'document': {'name': 'ChildAttachmentForm',
       #              'sequence': '1',
       #              'fileExtension': 'pdf',
       #              'documentBase64': 'SlZCRVJpMHhMalFOQ2lXVGpJdWVJRkpsY0c5eWRFeGhZaUJIWlc1bGNtRjBaV1FnVUVSR0lHUnZZM1Z0Wlc1MElHaDBkSEE2THk5M2QzY3VjbVZ3YjNKMGJHRmlMbU52YlEwS01TQXdJRzlpYWcwS1BEd2dMMFl4SURJZ01DQlNJQzlHTWlBeklEQWdVaUF2UmpNZ05DQXdJRklnUGo0TkNtVnVaRzlpYWcwS01pQXdJRzlpYWcwS1BEd2dMMEpoYzJWR2IyNTBJQzlJWld4MlpYUnBZMkVnTDBWdVkyOWthVzVuSUM5WGFXNUJibk5wUlc1amIyUnBibWNnTDA1aGJXVWdMMFl4SUM5VGRXSjBlWEJsSUM5VWVYQmxNU0F2Vkhsd1pTQXZSbTl1ZENBK1BnMEtaVzVrYjJKcURRb3pJREFnYjJKcURRbzhQQ0F2UW1GelpVWnZiblFnTDBobGJIWmxkR2xqWVMxQ2IyeGtJQzlGYm1OdlpHbHVaeUF2VjJsdVFXNXphVVZ1WTI5a2FXNW5JQzlPWVcxbElDOUdNaUF2VTNWaWRIbHdaU0F2Vkhsd1pURWdMMVI1Y0dVZ0wwWnZiblFnUGo0TkNtVnVaRzlpYWcwS05DQXdJRzlpYWcwS1BEd2dMMEpoYzJWR2IyNTBJQzlVYVcxbGN5MVNiMjFoYmlBdlJXNWpiMlJwYm1jZ0wxZHBia0Z1YzJsRmJtTnZaR2x1WnlBdlRtRnRaU0F2UmpNZ0wxTjFZblI1Y0dVZ0wxUjVjR1V4SUM5VWVYQmxJQzlHYjI1MElENCtEUXBsYm1Sdlltb05DalVnTUNCdlltb05Danc4SUM5RGIyNTBaVzUwY3lBNUlEQWdVaUF2VFdWa2FXRkNiM2dnV3lBd0lEQWdOakV5SURjNU1pQmRJQzlRWVhKbGJuUWdPQ0F3SUZJZ0wxSmxjMjkxY21ObGN5QThQQ0F2Um05dWRDQXhJREFnVWlBdlVISnZZMU5sZENCYklDOVFSRVlnTDFSbGVIUWdMMGx0WVdkbFFpQXZTVzFoWjJWRElDOUpiV0ZuWlVrZ1hTQStQaUF2VW05MFlYUmxJREFnTDFSeVlXNXpJRHc4SUNBK1BpQU5DaUFnTDFSNWNHVWdMMUJoWjJVZ1BqNE5DbVZ1Wkc5aWFnMEtOaUF3SUc5aWFnMEtQRHdnTDA5MWRHeHBibVZ6SURFd0lEQWdVaUF2VUdGblpVMXZaR1VnTDFWelpVNXZibVVnTDFCaFoyVnpJRGdnTUNCU0lDOVVlWEJsSUM5RFlYUmhiRzluSUQ0K0RRcGxibVJ2WW1vTkNqY2dNQ0J2WW1vTkNqdzhJQzlCZFhSb2IzSWdLRndvWVc1dmJubHRiM1Z6WENrcElDOURjbVZoZEdsdmJrUmhkR1VnS0VRNk1qQXhOVEE0TURFd05qRXdNVGdyTURBbk1EQW5LU0F2UTNKbFlYUnZjaUFvWENoMWJuTndaV05wWm1sbFpGd3BLU0F2UzJWNWQyOXlaSE1nS0NrZ0wxQnliMlIxWTJWeUlDaFNaWEJ2Y25STVlXSWdVRVJHSUV4cFluSmhjbmtnTFNCM2QzY3VjbVZ3YjNKMGJHRmlMbU52YlNrZ0wxTjFZbXBsWTNRZ0tGd29kVzV6Y0dWamFXWnBaV1JjS1NrZ0RRb2dJQzlVYVhSc1pTQW9YQ2hoYm05dWVXMXZkWE5jS1NrZ1BqNE5DbVZ1Wkc5aWFnMEtPQ0F3SUc5aWFnMEtQRHdnTDBOdmRXNTBJREVnTDB0cFpITWdXeUExSURBZ1VpQmRJQzlVZVhCbElDOVFZV2RsY3lBK1BnMEtaVzVrYjJKcURRbzVJREFnYjJKcURRbzhQQ0F2Um1sc2RHVnlJRnNnTDBGVFEwbEpPRFZFWldOdlpHVWdMMFpzWVhSbFJHVmpiMlJsSUYwZ0wweGxibWQwYUNBeE56TXlJRDQrRFFwemRISmxZVzBOQ2tkaUlpOG9PeXcvTkRNbU9sSXVMelZGSjF3elB6SWxQU2hOTTBKaVJqQXVOREZhSkdCaGNsMWtWand0VEVoVFF6cHFKVDVqS25GQlBTbGZabDVVYVhSTVNrdzBTR0ZJVGxoeE0ybDFMVEVsUWpCUFdDUkxLaXNsTWpNNVIwWk1JV1J1SzJOeFhDY3lVeUZtU2lJNk5FNXBRWEpVUXo5cUtsNU9XMGd0YTB4QUxqRWpYejVlTTJnNVBWTmlQRnc5S0Q5Rk16ZFVSalpPVEcxSllYVTFkVTBvTEZsVlJpSmRYVTB1TzJ0REtVdzJTRTluU2lKa1hUbERKbWc3Wm1aaU4xbHFialJ1TUNGMFhDUTFXV0JDWUR0S05HRTRMaTlzVHpoZ2JUbHhMbGs5VTBKRlVEOVBURVExVUMxWmIwdHliamswTjJJN09TRStUMkJEYjJaS1NpcFNMalpoUzFaZlAxWXhhejg5UG1SU01FUW9SMU15VFZKWWNEOHhNbE03UVRKVVNVQmtPRXRoTFcxcFRGdHVOVWRnTFU0eEltSTFSMmhTTFdZeFlHMVlWV2dqYkRaZlRrSnlJVTFEUkZvelhWSlZiVVZtYUZOVkoyazdYV05uVEZ0Y1J5VlNKa0JVSVY4NFJqRXVJVUp4SVRWZGNTZ2xPME5SVTFoQlprZHBPRU02SmxoV1NVdEZTakF2UURRbVlFUTNRQzBxVEdrN05qbFBibGREUkZ4SVpTMUJKVHhmVlQwbFd6SkRNMEVrTWtNL2RGWTVRU0luWEVCalJUcFdYbGRUUTBZbFFsMU1UbEZvTkhKSklqYzZNU1ZjUTF3dmJURlZMV1k3WVZzb0tGYzJibkZZU1dNb1VTTkdRUzVVT1NJMVJ5UXJWazRsUmlOZVAxdEtJbWhUWGxaVFRFRTlNRUJRWVVOWGNpcE5NQ3AxUTJOTU5pYzZSajlNVjFGYVpTWThibFJ4U0dJNFcwUTliVUFxS0c0ellVMDdaRmRzU2lnd2RVNDZUMVp4S0d0MFBHWWtkVXhOVXlnckxWWk5jVHRtUENnK2NXeHlSMFp4TzJjbldXcEdaMHdsSVdRM1BqNHBiR1kvY1dvalprUklYVnBpWTI0MmJDTWpXRFltS1Q5alRWaGlibWd3S1Y5cFAweGlYMDlMVHpCSlcyUW5iQzVaTXlOdVJEMHRheWRVUVVRcVQxY2lOQ3NsU3kxWk55NXNjbTFzSWlkclAxVnlXUzVpWXlKb0sxUk5LbDAwVWxRblpWcGJKa3NwYkRKZVF6RnZMa1VpTVVBK1JXVStYRGsyTVRNd2FVNGtYR05aWW1OWE9sMXpOVFpzUkVvMllFcGViaUpUT1VseVBXaEtKVWtsVFVnbkxFbzJkRkJUTUNjNlJUWTdhMElqVEV4T05sMVBPRE1vTVQ5bmNUWkNLaXc2U3pWWWNpRm5jRzl1UURCcVhsWkZQeW8zVG01dU8yUmJjVHBEVnpaTVdVRTlaR1ZDUlR0VWN5RWhQa1pjTEZKYU9VTTJKRU5VY1VVOEtUMTFkR3N2VmtkVEluQjFaVkJaVFRWcUwxOVpiaTVTTGo1eEpqb2hhQ016TVM5REwwZExaV1JNWGw5aUwzUkdRU3hMTWtrbVVqUkRZRjgyZFQ5dUxUWjFhbEpsVTNVNEkwRThiMjAyV2xZNlFDMUViRk04TERVM1ZGdE9ialpBTmpraUpVVm9VajFVYm1ZbldYQktiMkpZVWkwcmJDNHJORTl0U3lvNmNXWXBOQ2RrYVNReVoyUnRjREJRUUZnOFUwbHZLV2hyVTBaMVlsWnZZeVJzUVRzK1oyczhZMEpiUERkS1JrSkpUMDl2SWtwYUwyZE1Uelp5UDNGaEwwbEZSVkJPUDB0elBsMVBWVlpPVlZzaEwySTBNMEZlSW1WWFVYQXBLR3BGUFVreExuVlRVWEJmSkM1RklsMWROakF1V21aT00yNUFWMmhKTVY1S1RTVllSSFJtYWxKYlFDZ3pWRmhxTHlKSFVGWmZYWEFxY2lsWklWczFSM0VoUlQ5bk4zQmlVemNzSWlSemJrUnVYVkpnSWpvbUl5OGlMMmhzZFhVM0tGZFJZU01tWmloWlJpeE5JVTlLZEM5UVpXUk9PVjVHSkhFeUoyVmNORUJtWjFVNE0yRlJMaWRnUFZGRWNDOXZMRElsSVN4cVhWa3FPbUZiYVVOR2J5US9aVG81SmlJMFVuSWpVa1JxYUZ4SEwwODNMemdtU21GUk9EaEJQVkUzTjAwdFBUUkxRRGRvV0NwaldWOVhWa2R2WjAxWU9XZEtYVjlYSmxCQlZUWm1KVmRLUFNoZ0xIRlNQU1JzSXl4RUltWm1iU05lUUhGMVgyRXBKRWh5SWxkcE5pMWdZbE1xWHlkdFZDRmxMeUZKUDA4MkxrRjBhemRpVVQwcWNEMUpPbEpsVzIxUlB6Rm5RQ2tuVVVrM0xrbHBhU1l2ZFM1UWJqVkFLMWtzSVQ1Z1BUQTJMRlpCV0V3akxsMG5ZbDVtYlVaelZrQkRMRGc0WjA4NlV6QWpTVHRGSjExWlVHQTVKR2xuVjJnOU5DSkpiamhXVlZOSkl5Sm1NQ3MyVkQ5WmNpNWpPMnBRT1MxSlpXZGZYaUZIY0ZzaVltSm9VSEpiUldWbEpFZzBjanNyU3lOZVlWWkJVRXBPSVhSZlRtTk5PbGxlT0hWQ01ISXFUU0kwY3pJd1dYTnBiQ2xDT3k0dk5Xc3pYMUkzYzNJL05GOVhMV0ZtWlYxWWJTYzVXVHNwYjNOalBUdE1VbEU3Y1Uxd1kxMW1jemhGT0NScU5Gd3BORkZJVERrb0psTmlUanhZWVhSYVgyOGxWaUZYYlVWVVVDaERjVUZOTVdnc0xsQkdTQzQzYlRGaVFqRmxSMUpJVVRkMUtTRmNjamNuYlNZNWRFWmpPVmxmSkNOY1pWazZSR1VtV2tRN0prNXBNbGxHVFRwZVNFSnlJelV4UmxacWNDbGlPbkZBUkRobFUxQTVLREpjWlcxeFEwMDZQVjBoTkRrNE5XaHpTbDRyY1c1WlpWUnZZekJDVjE4dGZqNWxibVJ6ZEhKbFlXME5DbVZ1Wkc5aWFnMEtNVEFnTUNCdlltb05Danc4SUM5RGIzVnVkQ0F3SUM5VWVYQmxJQzlQZFhSc2FXNWxjeUErUGcwS1pXNWtiMkpxRFFwNGNtVm1EUW93SURFeERRb3dNREF3TURBd01EQXdJRFkxTlRNMUlHWU5DakF3TURBd01EQXdOelVnTURBd01EQWdiZzBLTURBd01EQXdNREV5T1NBd01EQXdNQ0J1RFFvd01EQXdNREF3TWpNNUlEQXdNREF3SUc0TkNqQXdNREF3TURBek5UUWdNREF3TURBZ2JnMEtNREF3TURBd01EUTJOaUF3TURBd01DQnVEUW93TURBd01EQXdOall6SURBd01EQXdJRzROQ2pBd01EQXdNREEzTlRFZ01EQXdNREFnYmcwS01EQXdNREF3TURrNE55QXdNREF3TUNCdURRb3dNREF3TURBeE1EUTVJREF3TURBd0lHNE5DakF3TURBd01ESTROemNnTURBd01EQWdiZzBLZEhKaGFXeGxjZzBLUER3Z0wwbEVJQTBLSUNVZ1VtVndiM0owVEdGaUlHZGxibVZ5WVhSbFpDQlFSRVlnWkc5amRXMWxiblFnTFMwZ1pHbG5aWE4wSUNob2RIUndPaTh2ZDNkM0xuSmxjRzl5ZEd4aFlpNWpiMjBwRFFvZ1d5aG9KVnd3TXpOcFhESXpNM2hjTWpJM1hESXlORHBjTWpZeU1Gd3lORFJIZUZ3eU1EWmNNRE14S1NBb2FDVmNNRE16YVZ3eU16TjRYREl5TjF3eU1qUTZYREkyTWpCY01qUTBSM2hjTWpBMlhEQXpNU2xkRFFvZ0wwbHVabThnTnlBd0lGSWdMMUp2YjNRZ05pQXdJRklnTDFOcGVtVWdNVEVnUGo0TkNuTjBZWEowZUhKbFpnMEtNamt5TncwS0pTVkZUMFlOQ2c9PQ==',
       #              'pages': '1',
       #              'documentId': '1'},
       # 'inlineTemplates': [{'recipients': {
       #     'carbonCopies': [
       #         {'templateRequired': False,
       #          'name': 'Test CC Recipient',
       #          'routingOrder': '2', 'tabs': {},
       #          'roleName': 'None',
       #          'recipientId': '2',
       #          'email': 'zmason@delmarsd.com'}]},
       #                      'sequence': '1'}]
       #  },
       {
       'document': {
           'name': 'FPPReplacementFormTemplate',
           'sequence': '1', 'fileExtension': 'pdf',
           'documentBase64': '',
           'pages': '1', 'documentId': '1'},
       'inlineTemplates': [{'recipients': {
           'carbonCopies': [
               {'templateRequired': False,
                'name': 'Test CC Recipient',
                'routingOrder': '2', 'tabs': {},
                'roleName': 'None',
                'recipientId': '2',
                'email': 'zmason@delmarsd.com'}]},
                            'sequence': '1'}]}
    ],
                              'emailSubject': 'Enrollment imported: FPPTI for Joe Smith (Another Test Case)',
                              'accountID': '5988eb5b-bee1-4825-a078-dcac445a22ce'})
    #envelope_result = create_envelope(email_subject="testing: signature needed",
    #                                  components=[general_template, child_attachment_form],
    #                                  docusign_transport=transport,
    #                                 )

    #url = envelope_result.get_signing_url(employee, callback_url='https://5starenroll.com', docusign_transport=transport)

    #print(url)
