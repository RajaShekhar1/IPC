"""Changed some table and column names

Revision ID: 3533b639aa1f
Revises: 49de79b0278c
Create Date: 2015-01-16 20:28:23.993229

"""

# revision identifiers, used by Alembic.
revision = '3533b639aa1f'
down_revision = '49de79b0278c'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enrollment_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('case_id', sa.Integer(), nullable=True),
    sa.Column('census_record_id', sa.Integer(), nullable=False),
    sa.Column('signature_time', sa.DateTime(), server_default='NOW', nullable=True),
    sa.Column('signature_city', sa.UnicodeText(), nullable=True),
    sa.Column('signature_state', sa.Unicode(length=2), nullable=True),
    sa.Column('identity_token', sa.UnicodeText(), nullable=True),
    sa.Column('identity_token_type', sa.Unicode(length=64), nullable=True),
    sa.Column('application_status', sa.Boolean(), nullable=True),
    sa.Column('mode', sa.Unicode(length=16), nullable=True),
    sa.Column('method', sa.Unicode(length=32), nullable=True),
    sa.Column('is_employee_owner', sa.Boolean(), nullable=True),
    sa.Column('employee_other_owner_name', sa.UnicodeText(), nullable=True),
    sa.Column('employee_other_owner_ssn', sa.Unicode(length=16), nullable=True),
    sa.Column('is_spouse_owner', sa.Boolean(), nullable=True),
    sa.Column('spouse_other_owner_name', sa.UnicodeText(), nullable=True),
    sa.Column('spouse_other_owner_ssn', sa.Unicode(length=16), nullable=True),
    sa.Column('is_employee_beneficiary_spouse', sa.Boolean(), nullable=True),
    sa.Column('employee_beneficiary_name', sa.UnicodeText(), nullable=True),
    sa.Column('employee_beneficiary_relationship', sa.UnicodeText(), nullable=True),
    sa.Column('employee_beneficiary_birthdate', sa.UnicodeText(), nullable=True),
    sa.Column('employee_beneficiary_ssn', sa.Unicode(length=16), nullable=True),
    sa.Column('is_spouse_beneficiary_employee', sa.Boolean(), nullable=True),
    sa.Column('spouse_beneficiary_name', sa.UnicodeText(), nullable=True),
    sa.Column('spouse_beneficiary_relationship', sa.UnicodeText(), nullable=True),
    sa.Column('spouse_beneficiary_birthdate', sa.UnicodeText(), nullable=True),
    sa.Column('spouse_beneficiary_ssn', sa.Unicode(length=16), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.ForeignKeyConstraint(['census_record_id'], ['case_census.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollment_application_coverage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('enrollment_application_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('applicant_type', sa.Unicode(length=32), nullable=True),
    sa.Column('height_inches', sa.Integer(), nullable=True),
    sa.Column('weight_pounds', sa.Integer(), nullable=True),
    sa.Column('is_smoker', sa.Boolean(), nullable=True),
    sa.Column('coverage_face_value', sa.Unicode(length=256), nullable=True),
    sa.Column('weekly_premium', sa.Numeric(), nullable=True),
    sa.Column('biweekly_premium', sa.Numeric(), nullable=True),
    sa.Column('monthly_premium', sa.Numeric(), nullable=True),
    sa.Column('annual_premium', sa.Numeric(), nullable=True),
    sa.Column('soh_answers', sa.UnicodeText(), nullable=True),
    sa.ForeignKeyConstraint(['enrollment_application_id'], ['enrollment_applications.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('enrollment_coverage')
    op.drop_table('enrollments')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enrollments',
    sa.Column('id', sa.INTEGER(), server_default="nextval('enrollments_id_seq'::regclass)", nullable=False),
    sa.Column('case_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('census_record_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('signature_time', postgresql.TIMESTAMP(), server_default="2015-01-14 21:28:19.334974'::timestamp without time zone", autoincrement=False, nullable=True),
    sa.Column('signature_city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('signature_state', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('identity_token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('identity_token_type', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('did_decline_enrollment', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('mode', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('method', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('is_employee_owner', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('employee_other_owner_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('employee_other_owner_ssn', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('is_spouse_owner', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('spouse_other_owner_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spouse_other_owner_ssn', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('is_employee_beneficiary_spouse', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('employee_beneficiary_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('employee_beneficiary_relationship', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('employee_beneficiary_birthdate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('employee_beneficiary_ssn', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('is_spouse_beneficiary_employee', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('spouse_beneficiary_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spouse_beneficiary_relationship', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spouse_beneficiary_birthdate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spouse_beneficiary_ssn', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['case_id'], [u'cases.id'], name=u'enrollments_case_id_fkey'),
    sa.ForeignKeyConstraint(['census_record_id'], [u'case_census.id'], name=u'enrollments_census_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'enrollments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('enrollment_coverage',
    sa.Column('id', sa.INTEGER(), server_default="nextval('enrollment_coverage_id_seq'::regclass)", nullable=False),
    sa.Column('enrollment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('applicant_type', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('height_inches', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('weight_pounds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_smoker', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('coverage_face_value', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('weekly_premium', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('biweekly_premium', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('monthly_premium', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('annual_premium', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('soh_answers', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['enrollment_id'], [u'enrollments.id'], name=u'enrollment_coverage_enrollment_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], [u'products.id'], name=u'enrollment_coverage_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'enrollment_coverage_pkey')
    )
    op.drop_table('enrollment_application_coverage')
    op.drop_table('enrollment_applications')
    ### end Alembic commands ###
